/*
 * generated by Xtext 2.22.0
 */
grammar InternalSmartContractSpecification;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package edu.ustb.sei.mde.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.ustb.sei.mde.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.ustb.sei.mde.services.SmartContractSpecificationGrammarAccess;

}
@parser::members {
	private SmartContractSpecificationGrammarAccess grammarAccess;

	public void setGrammarAccess(SmartContractSpecificationGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleContract
entryRuleContract
:
{ before(grammarAccess.getContractRule()); }
	 ruleContract
{ after(grammarAccess.getContractRule()); } 
	 EOF 
;

// Rule Contract
ruleContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractAccess().getGroup()); }
		(rule__Contract__Group__0)
		{ after(grammarAccess.getContractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexType
entryRuleComplexType
:
{ before(grammarAccess.getComplexTypeRule()); }
	 ruleComplexType
{ after(grammarAccess.getComplexTypeRule()); } 
	 EOF 
;

// Rule ComplexType
ruleComplexType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexTypeAccess().getGroup()); }
		(rule__ComplexType__Group__0)
		{ after(grammarAccess.getComplexTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAsset
entryRuleAsset
:
{ before(grammarAccess.getAssetRule()); }
	 ruleAsset
{ after(grammarAccess.getAssetRule()); } 
	 EOF 
;

// Rule Asset
ruleAsset 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssetAccess().getGroup()); }
		(rule__Asset__Group__0)
		{ after(grammarAccess.getAssetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelection
entryRuleSelection
:
{ before(grammarAccess.getSelectionRule()); }
	 ruleSelection
{ after(grammarAccess.getSelectionRule()); } 
	 EOF 
;

// Rule Selection
ruleSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectionAccess().getNameAssignment()); }
		(rule__Selection__NameAssignment)
		{ after(grammarAccess.getSelectionAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParty
entryRuleParty
:
{ before(grammarAccess.getPartyRule()); }
	 ruleParty
{ after(grammarAccess.getPartyRule()); } 
	 EOF 
;

// Rule Party
ruleParty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPartyAccess().getAlternatives()); }
		(rule__Party__Alternatives)
		{ after(grammarAccess.getPartyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getAlternatives()); }
		(rule__Term__Alternatives)
		{ after(grammarAccess.getTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransferOperation
entryRuleTransferOperation
:
{ before(grammarAccess.getTransferOperationRule()); }
	 ruleTransferOperation
{ after(grammarAccess.getTransferOperationRule()); } 
	 EOF 
;

// Rule TransferOperation
ruleTransferOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransferOperationAccess().getAlternatives()); }
		(rule__TransferOperation__Alternatives)
		{ after(grammarAccess.getTransferOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMoneyExpression
entryRuleMoneyExpression
:
{ before(grammarAccess.getMoneyExpressionRule()); }
	 ruleMoneyExpression
{ after(grammarAccess.getMoneyExpressionRule()); } 
	 EOF 
;

// Rule MoneyExpression
ruleMoneyExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoneyExpressionAccess().getGroup()); }
		(rule__MoneyExpression__Group__0)
		{ after(grammarAccess.getMoneyExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDescriptiveExpression
entryRuleDescriptiveExpression
:
{ before(grammarAccess.getDescriptiveExpressionRule()); }
	 ruleDescriptiveExpression
{ after(grammarAccess.getDescriptiveExpressionRule()); } 
	 EOF 
;

// Rule DescriptiveExpression
ruleDescriptiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptiveExpressionAccess().getPlainTextAssignment()); }
		(rule__DescriptiveExpression__PlainTextAssignment)
		{ after(grammarAccess.getDescriptiveExpressionAccess().getPlainTextAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionSourceExpression
entryRuleCollectionSourceExpression
:
{ before(grammarAccess.getCollectionSourceExpressionRule()); }
	 ruleCollectionSourceExpression
{ after(grammarAccess.getCollectionSourceExpressionRule()); } 
	 EOF 
;

// Rule CollectionSourceExpression
ruleCollectionSourceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionSourceExpressionAccess().getGroup()); }
		(rule__CollectionSourceExpression__Group__0)
		{ after(grammarAccess.getCollectionSourceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIteratorDeclExpression
entryRuleIteratorDeclExpression
:
{ before(grammarAccess.getIteratorDeclExpressionRule()); }
	 ruleIteratorDeclExpression
{ after(grammarAccess.getIteratorDeclExpressionRule()); } 
	 EOF 
;

// Rule IteratorDeclExpression
ruleIteratorDeclExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIteratorDeclExpressionAccess().getNameAssignment()); }
		(rule__IteratorDeclExpression__NameAssignment)
		{ after(grammarAccess.getIteratorDeclExpressionAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuantifierExpression
entryRuleQuantifierExpression
:
{ before(grammarAccess.getQuantifierExpressionRule()); }
	 ruleQuantifierExpression
{ after(grammarAccess.getQuantifierExpressionRule()); } 
	 EOF 
;

// Rule QuantifierExpression
ruleQuantifierExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuantifierExpressionAccess().getGroup()); }
		(rule__QuantifierExpression__Group__0)
		{ after(grammarAccess.getQuantifierExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
		(rule__ConditionalExpression__Group__0)
		{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplyExpression
entryRuleImplyExpression
:
{ before(grammarAccess.getImplyExpressionRule()); }
	 ruleImplyExpression
{ after(grammarAccess.getImplyExpressionRule()); } 
	 EOF 
;

// Rule ImplyExpression
ruleImplyExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplyExpressionAccess().getGroup()); }
		(rule__ImplyExpression__Group__0)
		{ after(grammarAccess.getImplyExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpressionChild
entryRuleAndExpressionChild
:
{ before(grammarAccess.getAndExpressionChildRule()); }
	 ruleAndExpressionChild
{ after(grammarAccess.getAndExpressionChildRule()); } 
	 EOF 
;

// Rule AndExpressionChild
ruleAndExpressionChild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionChildAccess().getAlternatives()); }
		(rule__AndExpressionChild__Alternatives)
		{ after(grammarAccess.getAndExpressionChildAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotExpression
entryRuleNotExpression
:
{ before(grammarAccess.getNotExpressionRule()); }
	 ruleNotExpression
{ after(grammarAccess.getNotExpressionRule()); } 
	 EOF 
;

// Rule NotExpression
ruleNotExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotExpressionAccess().getGroup()); }
		(rule__NotExpression__Group__0)
		{ after(grammarAccess.getNotExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression
:
{ before(grammarAccess.getArithmeticExpressionRule()); }
	 ruleArithmeticExpression
{ after(grammarAccess.getArithmeticExpressionRule()); } 
	 EOF 
;

// Rule ArithmeticExpression
ruleArithmeticExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getAdditiveExpressionParserRuleCall()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getArithmeticExpressionAccess().getAdditiveExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomExpression
entryRuleAtomExpression
:
{ before(grammarAccess.getAtomExpressionRule()); }
	 ruleAtomExpression
{ after(grammarAccess.getAtomExpressionRule()); } 
	 EOF 
;

// Rule AtomExpression
ruleAtomExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomExpressionAccess().getAlternatives()); }
		(rule__AtomExpression__Alternatives)
		{ after(grammarAccess.getAtomExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThisExpression
entryRuleThisExpression
:
{ before(grammarAccess.getThisExpressionRule()); }
	 ruleThisExpression
{ after(grammarAccess.getThisExpressionRule()); } 
	 EOF 
;

// Rule ThisExpression
ruleThisExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThisExpressionAccess().getGroup()); }
		(rule__ThisExpression__Group__0)
		{ after(grammarAccess.getThisExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSlotRef
entryRuleSlotRef
:
{ before(grammarAccess.getSlotRefRule()); }
	 ruleSlotRef
{ after(grammarAccess.getSlotRefRule()); } 
	 EOF 
;

// Rule SlotRef
ruleSlotRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSlotRefAccess().getGroup()); }
		(rule__SlotRef__Group__0)
		{ after(grammarAccess.getSlotRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
		(rule__ConstantExpression__Alternatives)
		{ after(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloat
entryRuleFloat
:
{ before(grammarAccess.getFloatRule()); }
	 ruleFloat
{ after(grammarAccess.getFloatRule()); } 
	 EOF 
;

// Rule Float
ruleFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatAccess().getGroup()); }
		(rule__Float__Group__0)
		{ after(grammarAccess.getFloatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInteger
entryRuleInteger
:
{ before(grammarAccess.getIntegerRule()); }
	 ruleInteger
{ after(grammarAccess.getIntegerRule()); } 
	 EOF 
;

// Rule Integer
ruleInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerAccess().getGroup()); }
		(rule__Integer__Group__0)
		{ after(grammarAccess.getIntegerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean
entryRuleBoolean
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanAccess().getAlternatives()); }
		(rule__Boolean__Alternatives)
		{ after(grammarAccess.getBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimePredicate
entryRuleTimePredicate
:
{ before(grammarAccess.getTimePredicateRule()); }
	 ruleTimePredicate
{ after(grammarAccess.getTimePredicateRule()); } 
	 EOF 
;

// Rule TimePredicate
ruleTimePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimePredicateAccess().getAlternatives()); }
		(rule__TimePredicate__Alternatives)
		{ after(grammarAccess.getTimePredicateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleTimePredicate
entryRuleSimpleTimePredicate
:
{ before(grammarAccess.getSimpleTimePredicateRule()); }
	 ruleSimpleTimePredicate
{ after(grammarAccess.getSimpleTimePredicateRule()); } 
	 EOF 
;

// Rule SimpleTimePredicate
ruleSimpleTimePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleTimePredicateAccess().getGroup()); }
		(rule__SimpleTimePredicate__Group__0)
		{ after(grammarAccess.getSimpleTimePredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoundedTimePredicate
entryRuleBoundedTimePredicate
:
{ before(grammarAccess.getBoundedTimePredicateRule()); }
	 ruleBoundedTimePredicate
{ after(grammarAccess.getBoundedTimePredicateRule()); } 
	 EOF 
;

// Rule BoundedTimePredicate
ruleBoundedTimePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoundedTimePredicateAccess().getGroup()); }
		(rule__BoundedTimePredicate__Group__0)
		{ after(grammarAccess.getBoundedTimePredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePeriodicTimePredicate
entryRulePeriodicTimePredicate
:
{ before(grammarAccess.getPeriodicTimePredicateRule()); }
	 rulePeriodicTimePredicate
{ after(grammarAccess.getPeriodicTimePredicateRule()); } 
	 EOF 
;

// Rule PeriodicTimePredicate
rulePeriodicTimePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPeriodicTimePredicateAccess().getGroup()); }
		(rule__PeriodicTimePredicate__Group__0)
		{ after(grammarAccess.getPeriodicTimePredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeExpression
entryRuleTimeExpression
:
{ before(grammarAccess.getTimeExpressionRule()); }
	 ruleTimeExpression
{ after(grammarAccess.getTimeExpressionRule()); } 
	 EOF 
;

// Rule TimeExpression
ruleTimeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeExpressionAccess().getAlternatives()); }
		(rule__TimeExpression__Alternatives)
		{ after(grammarAccess.getTimeExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeQuery
entryRuleTimeQuery
:
{ before(grammarAccess.getTimeQueryRule()); }
	 ruleTimeQuery
{ after(grammarAccess.getTimeQueryRule()); } 
	 EOF 
;

// Rule TimeQuery
ruleTimeQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeQueryAccess().getAlternatives()); }
		(rule__TimeQuery__Alternatives)
		{ after(grammarAccess.getTimeQueryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionEnforcedTimeQuery
entryRuleActionEnforcedTimeQuery
:
{ before(grammarAccess.getActionEnforcedTimeQueryRule()); }
	 ruleActionEnforcedTimeQuery
{ after(grammarAccess.getActionEnforcedTimeQueryRule()); } 
	 EOF 
;

// Rule ActionEnforcedTimeQuery
ruleActionEnforcedTimeQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionEnforcedTimeQueryAccess().getGroup()); }
		(rule__ActionEnforcedTimeQuery__Group__0)
		{ after(grammarAccess.getActionEnforcedTimeQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermValidTimeQuery
entryRuleTermValidTimeQuery
:
{ before(grammarAccess.getTermValidTimeQueryRule()); }
	 ruleTermValidTimeQuery
{ after(grammarAccess.getTermValidTimeQueryRule()); } 
	 EOF 
;

// Rule TermValidTimeQuery
ruleTermValidTimeQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermValidTimeQueryAccess().getGroup()); }
		(rule__TermValidTimeQuery__Group__0)
		{ after(grammarAccess.getTermValidTimeQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalTimeQuery
entryRuleGlobalTimeQuery
:
{ before(grammarAccess.getGlobalTimeQueryRule()); }
	 ruleGlobalTimeQuery
{ after(grammarAccess.getGlobalTimeQueryRule()); } 
	 EOF 
;

// Rule GlobalTimeQuery
ruleGlobalTimeQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalTimeQueryAccess().getOperatorAssignment()); }
		(rule__GlobalTimeQuery__OperatorAssignment)
		{ after(grammarAccess.getGlobalTimeQueryAccess().getOperatorAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeLine
entryRuleTimeLine
:
{ before(grammarAccess.getTimeLineRule()); }
	 ruleTimeLine
{ after(grammarAccess.getTimeLineRule()); } 
	 EOF 
;

// Rule TimeLine
ruleTimeLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeLineAccess().getGroup()); }
		(rule__TimeLine__Group__0)
		{ after(grammarAccess.getTimeLineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeLineChild
entryRuleTimeLineChild
:
{ before(grammarAccess.getTimeLineChildRule()); }
	 ruleTimeLineChild
{ after(grammarAccess.getTimeLineChildRule()); } 
	 EOF 
;

// Rule TimeLineChild
ruleTimeLineChild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeLineChildAccess().getAlternatives()); }
		(rule__TimeLineChild__Alternatives)
		{ after(grammarAccess.getTimeLineChildAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeConstant
entryRuleTimeConstant
:
{ before(grammarAccess.getTimeConstantRule()); }
	 ruleTimeConstant
{ after(grammarAccess.getTimeConstantRule()); } 
	 EOF 
;

// Rule TimeConstant
ruleTimeConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeConstantAccess().getGroup()); }
		(rule__TimeConstant__Group__0)
		{ after(grammarAccess.getTimeConstantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeVarExpression
entryRuleTimeVarExpression
:
{ before(grammarAccess.getTimeVarExpressionRule()); }
	 ruleTimeVarExpression
{ after(grammarAccess.getTimeVarExpressionRule()); } 
	 EOF 
;

// Rule TimeVarExpression
ruleTimeVarExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeVarExpressionAccess().getGroup()); }
		(rule__TimeVarExpression__Group__0)
		{ after(grammarAccess.getTimeVarExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeThisExpression
entryRuleTimeThisExpression
:
{ before(grammarAccess.getTimeThisExpressionRule()); }
	 ruleTimeThisExpression
{ after(grammarAccess.getTimeThisExpressionRule()); } 
	 EOF 
;

// Rule TimeThisExpression
ruleTimeThisExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeThisExpressionAccess().getGroup()); }
		(rule__TimeThisExpression__Group__0)
		{ after(grammarAccess.getTimeThisExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Quantifier
ruleQuantifier
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierAccess().getAlternatives()); }
		(rule__Quantifier__Alternatives)
		{ after(grammarAccess.getQuantifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RelationOperator
ruleRelationOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationOperatorAccess().getAlternatives()); }
		(rule__RelationOperator__Alternatives)
		{ after(grammarAccess.getRelationOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AdditiveOperator
ruleAdditiveOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
		(rule__AdditiveOperator__Alternatives)
		{ after(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MultiplicativeOperator
ruleMultiplicativeOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
		(rule__MultiplicativeOperator__Alternatives)
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TransitiveOperator
ruleTransitiveOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitiveOperatorAccess().getAlternatives()); }
		(rule__TransitiveOperator__Alternatives)
		{ after(grammarAccess.getTransitiveOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimePredicateOperator
ruleTimePredicateOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimePredicateOperatorAccess().getAlternatives()); }
		(rule__TimePredicateOperator__Alternatives)
		{ after(grammarAccess.getTimePredicateOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ActionMultiplicity
ruleActionMultiplicity
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionMultiplicityAccess().getAlternatives()); }
		(rule__ActionMultiplicity__Alternatives)
		{ after(grammarAccess.getActionMultiplicityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimeLineOperator
ruleTimeLineOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeLineOperatorAccess().getAlternatives()); }
		(rule__TimeLineOperator__Alternatives)
		{ after(grammarAccess.getTimeLineOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimeQueryOperator
ruleTimeQueryOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeQueryOperatorAccess().getAlternatives()); }
		(rule__TimeQueryOperator__Alternatives)
		{ after(grammarAccess.getTimeQueryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartyAccess().getGroup_0()); }
		(rule__Party__Group_0__0)
		{ after(grammarAccess.getPartyAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPartyAccess().getGroup_1()); }
		(rule__Party__Group_1__0)
		{ after(grammarAccess.getPartyAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPartyAccess().getGroup_2()); }
		(rule__Party__Group_2__0)
		{ after(grammarAccess.getPartyAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getGroup_0()); }
		(rule__Term__Group_0__0)
		{ after(grammarAccess.getTermAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getGroup_1()); }
		(rule__Term__Group_1__0)
		{ after(grammarAccess.getTermAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransferOperationAccess().getGroup_0()); }
		(rule__TransferOperation__Group_0__0)
		{ after(grammarAccess.getTransferOperationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransferOperationAccess().getGroup_1()); }
		(rule__TransferOperation__Group_1__0)
		{ after(grammarAccess.getTransferOperationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTransferOperationAccess().getGroup_2()); }
		(rule__TransferOperation__Group_2__0)
		{ after(grammarAccess.getTransferOperationAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall_0()); }
		ruleConditionalExpression
		{ after(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getImplyExpressionParserRuleCall_1()); }
		(ruleImplyExpression)
		{ after(grammarAccess.getExpressionAccess().getImplyExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Alternatives_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOrKeyword_1_0_0_1_0()); }
		'or'
		{ after(grammarAccess.getOrExpressionAccess().getOrKeyword_1_0_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_0_0_1_1()); }
		'||'
		{ after(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_0_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Alternatives_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getAndKeyword_1_0_0_1_0()); }
		'and'
		{ after(grammarAccess.getAndExpressionAccess().getAndKeyword_1_0_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_0_0_1_1()); }
		'&&'
		{ after(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_0_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpressionChild__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionChildAccess().getNotExpressionParserRuleCall_0()); }
		ruleNotExpression
		{ after(grammarAccess.getAndExpressionChildAccess().getNotExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndExpressionChildAccess().getRelationalExpressionParserRuleCall_1()); }
		ruleRelationalExpression
		{ after(grammarAccess.getAndExpressionChildAccess().getRelationalExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomExpressionAccess().getConstantExpressionParserRuleCall_0()); }
		(ruleConstantExpression)
		{ after(grammarAccess.getAtomExpressionAccess().getConstantExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExpressionAccess().getTimePredicateParserRuleCall_1()); }
		ruleTimePredicate
		{ after(grammarAccess.getAtomExpressionAccess().getTimePredicateParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExpressionAccess().getSlotRefParserRuleCall_2()); }
		ruleSlotRef
		{ after(grammarAccess.getAtomExpressionAccess().getSlotRefParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExpressionAccess().getThisExpressionParserRuleCall_3()); }
		ruleThisExpression
		{ after(grammarAccess.getAtomExpressionAccess().getThisExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExpressionAccess().getQuantifierExpressionParserRuleCall_4()); }
		ruleQuantifierExpression
		{ after(grammarAccess.getAtomExpressionAccess().getQuantifierExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExpressionAccess().getDescriptiveExpressionParserRuleCall_5()); }
		ruleDescriptiveExpression
		{ after(grammarAccess.getAtomExpressionAccess().getDescriptiveExpressionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExpressionAccess().getGlobalTimeQueryParserRuleCall_6()); }
		ruleGlobalTimeQuery
		{ after(grammarAccess.getAtomExpressionAccess().getGlobalTimeQueryParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExpressionAccess().getTimeConstantParserRuleCall_7()); }
		ruleTimeConstant
		{ after(grammarAccess.getAtomExpressionAccess().getTimeConstantParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExpressionAccess().getTimeQueryParserRuleCall_8()); }
		ruleTimeQuery
		{ after(grammarAccess.getAtomExpressionAccess().getTimeQueryParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExpressionAccess().getGroup_9()); }
		(rule__AtomExpression__Group_9__0)
		{ after(grammarAccess.getAtomExpressionAccess().getGroup_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThisExpressionAccess().getGroup_1_0()); }
		(rule__ThisExpression__Group_1_0__0)
		{ after(grammarAccess.getThisExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getThisExpressionAccess().getHeKeyword_1_1()); }
		'he'
		{ after(grammarAccess.getThisExpressionAccess().getHeKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getThisExpressionAccess().getSheKeyword_1_2()); }
		'she'
		{ after(grammarAccess.getThisExpressionAccess().getSheKeyword_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getThisExpressionAccess().getHisKeyword_1_3()); }
		'his'
		{ after(grammarAccess.getThisExpressionAccess().getHisKeyword_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getThisExpressionAccess().getHerKeyword_1_4()); }
		'her'
		{ after(grammarAccess.getThisExpressionAccess().getHerKeyword_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getThisExpressionAccess().getHimselfKeyword_1_5()); }
		'himself'
		{ after(grammarAccess.getThisExpressionAccess().getHimselfKeyword_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getThisExpressionAccess().getHerselfKeyword_1_6()); }
		'herself'
		{ after(grammarAccess.getThisExpressionAccess().getHerselfKeyword_1_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_0()); }
		(rule__ConstantExpression__Group_0__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_1()); }
		(rule__ConstantExpression__Group_1__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_2()); }
		(rule__ConstantExpression__Group_2__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_3()); }
		(rule__ConstantExpression__Group_3__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getGroup_4()); }
		(rule__ConstantExpression__Group_4__0)
		{ after(grammarAccess.getConstantExpressionAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatAccess().getPlusSignKeyword_0_0()); }
		'+'
		{ after(grammarAccess.getFloatAccess().getPlusSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatAccess().getHyphenMinusKeyword_0_1()); }
		'-'
		{ after(grammarAccess.getFloatAccess().getHyphenMinusKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatAccess().getGroup_1_0()); }
		(rule__Float__Group_1_0__0)
		{ after(grammarAccess.getFloatAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatAccess().getGroup_1_1()); }
		(rule__Float__Group_1_1__0)
		{ after(grammarAccess.getFloatAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBooleanAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBooleanAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimePredicate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimePredicateAccess().getSimpleTimePredicateParserRuleCall_0()); }
		ruleSimpleTimePredicate
		{ after(grammarAccess.getTimePredicateAccess().getSimpleTimePredicateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimePredicateAccess().getBoundedTimePredicateParserRuleCall_1()); }
		(ruleBoundedTimePredicate)
		{ after(grammarAccess.getTimePredicateAccess().getBoundedTimePredicateParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimePredicateAccess().getPeriodicTimePredicateParserRuleCall_2()); }
		(rulePeriodicTimePredicate)
		{ after(grammarAccess.getTimePredicateAccess().getPeriodicTimePredicateParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicTimePredicateAccess().getGroup_4_0()); }
		(rule__PeriodicTimePredicate__Group_4_0__0)
		{ after(grammarAccess.getPeriodicTimePredicateAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getPeriodicTimePredicateAccess().getGroup_4_1()); }
		(rule__PeriodicTimePredicate__Group_4_1__0)
		{ after(grammarAccess.getPeriodicTimePredicateAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeExpressionAccess().getTimeLineParserRuleCall_0()); }
		(ruleTimeLine)
		{ after(grammarAccess.getTimeExpressionAccess().getTimeLineParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeExpressionAccess().getTimeConstantParserRuleCall_1()); }
		ruleTimeConstant
		{ after(grammarAccess.getTimeExpressionAccess().getTimeConstantParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeExpressionAccess().getTimeQueryParserRuleCall_2()); }
		ruleTimeQuery
		{ after(grammarAccess.getTimeExpressionAccess().getTimeQueryParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeExpressionAccess().getTimeVarExpressionParserRuleCall_3()); }
		ruleTimeVarExpression
		{ after(grammarAccess.getTimeExpressionAccess().getTimeVarExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeExpressionAccess().getTimeThisExpressionParserRuleCall_4()); }
		ruleTimeThisExpression
		{ after(grammarAccess.getTimeExpressionAccess().getTimeThisExpressionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeQuery__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeQueryAccess().getActionEnforcedTimeQueryParserRuleCall_0()); }
		ruleActionEnforcedTimeQuery
		{ after(grammarAccess.getTimeQueryAccess().getActionEnforcedTimeQueryParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeQueryAccess().getTermValidTimeQueryParserRuleCall_1()); }
		ruleTermValidTimeQuery
		{ after(grammarAccess.getTimeQueryAccess().getTermValidTimeQueryParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeQueryAccess().getGlobalTimeQueryParserRuleCall_2()); }
		ruleGlobalTimeQuery
		{ after(grammarAccess.getTimeQueryAccess().getGlobalTimeQueryParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLineChild__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeLineChildAccess().getTimeConstantParserRuleCall_0()); }
		ruleTimeConstant
		{ after(grammarAccess.getTimeLineChildAccess().getTimeConstantParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeLineChildAccess().getTimeQueryParserRuleCall_1()); }
		ruleTimeQuery
		{ after(grammarAccess.getTimeLineChildAccess().getTimeQueryParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeThisExpressionAccess().getGroup_2_0()); }
		(rule__TimeThisExpression__Group_2_0__0)
		{ after(grammarAccess.getTimeThisExpressionAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeThisExpressionAccess().getHeKeyword_2_1()); }
		'he'
		{ after(grammarAccess.getTimeThisExpressionAccess().getHeKeyword_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeThisExpressionAccess().getSheKeyword_2_2()); }
		'she'
		{ after(grammarAccess.getTimeThisExpressionAccess().getSheKeyword_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeThisExpressionAccess().getHisKeyword_2_3()); }
		'his'
		{ after(grammarAccess.getTimeThisExpressionAccess().getHisKeyword_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeThisExpressionAccess().getHerKeyword_2_4()); }
		'her'
		{ after(grammarAccess.getTimeThisExpressionAccess().getHerKeyword_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getTimeThisExpressionAccess().getHimselfKeyword_2_5()); }
		'himself'
		{ after(grammarAccess.getTimeThisExpressionAccess().getHimselfKeyword_2_5()); }
	)
	|
	(
		{ before(grammarAccess.getTimeThisExpressionAccess().getHerselfKeyword_2_6()); }
		'herself'
		{ after(grammarAccess.getTimeThisExpressionAccess().getHerselfKeyword_2_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierAccess().getForAllEnumLiteralDeclaration_0()); }
		('all')
		{ after(grammarAccess.getQuantifierAccess().getForAllEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuantifierAccess().getForAllEnumLiteralDeclaration_1()); }
		('forAll')
		{ after(grammarAccess.getQuantifierAccess().getForAllEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_2()); }
		('some')
		{ after(grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_3()); }
		('exists')
		{ after(grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationOperatorAccess().getEqualEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getRelationOperatorAccess().getEqualEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationOperatorAccess().getEqualEnumLiteralDeclaration_1()); }
		('is')
		{ after(grammarAccess.getRelationOperatorAccess().getEqualEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationOperatorAccess().getLessEnumLiteralDeclaration_2()); }
		('<')
		{ after(grammarAccess.getRelationOperatorAccess().getLessEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationOperatorAccess().getLessOrEqualEnumLiteralDeclaration_3()); }
		('<=')
		{ after(grammarAccess.getRelationOperatorAccess().getLessOrEqualEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationOperatorAccess().getGreaterEnumLiteralDeclaration_4()); }
		('>')
		{ after(grammarAccess.getRelationOperatorAccess().getGreaterEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationOperatorAccess().getGreaterOrEqualEnumLiteralDeclaration_5()); }
		('>=')
		{ after(grammarAccess.getRelationOperatorAccess().getGreaterOrEqualEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_6()); }
		('!=')
		{ after(grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_7()); }
		('<>')
		{ after(grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_8()); }
		('isn\'t')
		{ after(grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getMulEnumLiteralDeclaration_0()); }
		('*')
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getMulEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1()); }
		('/')
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitiveOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitiveOperatorAccess().getTransitiveEnclosureEnumLiteralDeclaration_0()); }
		('^')
		{ after(grammarAccess.getTransitiveOperatorAccess().getTransitiveEnclosureEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitiveOperatorAccess().getSelfTransitiveEnclosureEnumLiteralDeclaration_1()); }
		('*')
		{ after(grammarAccess.getTransitiveOperatorAccess().getSelfTransitiveEnclosureEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimePredicateOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimePredicateOperatorAccess().getBeforeEnumLiteralDeclaration_0()); }
		('before')
		{ after(grammarAccess.getTimePredicateOperatorAccess().getBeforeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimePredicateOperatorAccess().getAfterEnumLiteralDeclaration_1()); }
		('after')
		{ after(grammarAccess.getTimePredicateOperatorAccess().getAfterEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionMultiplicity__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionMultiplicityAccess().getAllEnumLiteralDeclaration_0()); }
		('all')
		{ after(grammarAccess.getActionMultiplicityAccess().getAllEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_1()); }
		('any')
		{ after(grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_2()); }
		('some')
		{ after(grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_3()); }
		('one')
		{ after(grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getActionMultiplicityAccess().getThisEnumLiteralDeclaration_4()); }
		('this')
		{ after(grammarAccess.getActionMultiplicityAccess().getThisEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getActionMultiplicityAccess().getThisEnumLiteralDeclaration_5()); }
		('the')
		{ after(grammarAccess.getActionMultiplicityAccess().getThisEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLineOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeLineOperatorAccess().getForwardEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getTimeLineOperatorAccess().getForwardEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeLineOperatorAccess().getBackwardEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getTimeLineOperatorAccess().getBackwardEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeQueryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeQueryOperatorAccess().getNowEnumLiteralDeclaration_0()); }
		('now')
		{ after(grammarAccess.getTimeQueryOperatorAccess().getNowEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeQueryOperatorAccess().getContractStartEnumLiteralDeclaration_1()); }
		('start')
		{ after(grammarAccess.getTimeQueryOperatorAccess().getContractStartEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeQueryOperatorAccess().getContractEndEnumLiteralDeclaration_2()); }
		('end')
		{ after(grammarAccess.getTimeQueryOperatorAccess().getContractEndEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__0__Impl
	rule__Contract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getContractKeyword_0()); }
	'contract'
	{ after(grammarAccess.getContractAccess().getContractKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__1__Impl
	rule__Contract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getNameAssignment_1()); }
	(rule__Contract__NameAssignment_1)
	{ after(grammarAccess.getContractAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__2__Impl
	rule__Contract__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__3__Impl
	rule__Contract__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getContractAccess().getPartiesAssignment_3()); }
		(rule__Contract__PartiesAssignment_3)
		{ after(grammarAccess.getContractAccess().getPartiesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getContractAccess().getPartiesAssignment_3()); }
		(rule__Contract__PartiesAssignment_3)*
		{ after(grammarAccess.getContractAccess().getPartiesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__4__Impl
	rule__Contract__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getFieldsAssignment_4()); }
	(rule__Contract__FieldsAssignment_4)*
	{ after(grammarAccess.getContractAccess().getFieldsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__5__Impl
	rule__Contract__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getGroup_5()); }
	(rule__Contract__Group_5__0)*
	{ after(grammarAccess.getContractAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__6__Impl
	rule__Contract__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getTypesAssignment_6()); }
	(rule__Contract__TypesAssignment_6)*
	{ after(grammarAccess.getContractAccess().getTypesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__7__Impl
	rule__Contract__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getAssetsAssignment_7()); }
	(rule__Contract__AssetsAssignment_7)*
	{ after(grammarAccess.getContractAccess().getAssetsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getContractAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contract__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group_5__0__Impl
	rule__Contract__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getTermsAssignment_5_0()); }
	(rule__Contract__TermsAssignment_5_0)
	{ after(grammarAccess.getContractAccess().getTermsAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getFullStopKeyword_5_1()); }
	'.'
	{ after(grammarAccess.getContractAccess().getFullStopKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group__0__Impl
	rule__ComplexType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getComplexTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group__1__Impl
	rule__ComplexType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getNameAssignment_1()); }
	(rule__ComplexType__NameAssignment_1)
	{ after(grammarAccess.getComplexTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group__2__Impl
	rule__ComplexType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getComplexTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group__3__Impl
	rule__ComplexType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getFieldsAssignment_3()); }
	(rule__ComplexType__FieldsAssignment_3)*
	{ after(grammarAccess.getComplexTypeAccess().getFieldsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getComplexTypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Asset__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__0__Impl
	rule__Asset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getAssetKeyword_0()); }
	'asset'
	{ after(grammarAccess.getAssetAccess().getAssetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__1__Impl
	rule__Asset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getNameAssignment_1()); }
	(rule__Asset__NameAssignment_1)
	{ after(grammarAccess.getAssetAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__2__Impl
	rule__Asset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__3__Impl
	rule__Asset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getInfoKeyword_3()); }
	'info'
	{ after(grammarAccess.getAssetAccess().getInfoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__4__Impl
	rule__Asset__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__5__Impl
	rule__Asset__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getFieldsAssignment_5()); }
	(rule__Asset__FieldsAssignment_5)*
	{ after(grammarAccess.getAssetAccess().getFieldsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__6__Impl
	rule__Asset__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__7__Impl
	rule__Asset__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getRightKeyword_7()); }
	'right'
	{ after(grammarAccess.getAssetAccess().getRightKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__8__Impl
	rule__Asset__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__9__Impl
	rule__Asset__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getFieldsAssignment_9()); }
	(rule__Asset__FieldsAssignment_9)*
	{ after(grammarAccess.getAssetAccess().getFieldsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__10__Impl
	rule__Asset__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asset__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_0()); }
	(rule__Field__NameAssignment_0)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getManyAssignment_2()); }
	(rule__Field__ManyAssignment_2)?
	{ after(grammarAccess.getFieldAccess().getManyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_3()); }
	(rule__Field__TypeAssignment_3)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getSLDTerminalRuleCall_4()); }
	(RULE_SLD)?
	{ after(grammarAccess.getFieldAccess().getSLDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Party__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_0__0__Impl
	rule__Party__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getSinglePartyAction_0_0()); }
	()
	{ after(grammarAccess.getPartyAccess().getSinglePartyAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_0__1__Impl
	rule__Party__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getPartyKeyword_0_1()); }
	'party'
	{ after(grammarAccess.getPartyAccess().getPartyKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_0__2__Impl
	rule__Party__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getNameAssignment_0_2()); }
	(rule__Party__NameAssignment_0_2)
	{ after(grammarAccess.getPartyAccess().getNameAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_0__3__Impl
	rule__Party__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getLeftCurlyBracketKeyword_0_3()); }
	'{'
	{ after(grammarAccess.getPartyAccess().getLeftCurlyBracketKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_0__4__Impl
	rule__Party__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getFieldsAssignment_0_4()); }
	(rule__Party__FieldsAssignment_0_4)*
	{ after(grammarAccess.getPartyAccess().getFieldsAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_0__5__Impl
	rule__Party__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getActionsAssignment_0_5()); }
	(rule__Party__ActionsAssignment_0_5)*
	{ after(grammarAccess.getPartyAccess().getActionsAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getRightCurlyBracketKeyword_0_6()); }
	'}'
	{ after(grammarAccess.getPartyAccess().getRightCurlyBracketKeyword_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Party__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_1__0__Impl
	rule__Party__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getGroupPartyAction_1_0()); }
	()
	{ after(grammarAccess.getPartyAccess().getGroupPartyAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_1__1__Impl
	rule__Party__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getPartyKeyword_1_1()); }
	'party'
	{ after(grammarAccess.getPartyAccess().getPartyKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_1__2__Impl
	rule__Party__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getGroupKeyword_1_2()); }
	'group'
	{ after(grammarAccess.getPartyAccess().getGroupKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_1__3__Impl
	rule__Party__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getNameAssignment_1_3()); }
	(rule__Party__NameAssignment_1_3)
	{ after(grammarAccess.getPartyAccess().getNameAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_1__4__Impl
	rule__Party__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getLeftCurlyBracketKeyword_1_4()); }
	'{'
	{ after(grammarAccess.getPartyAccess().getLeftCurlyBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_1__5__Impl
	rule__Party__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getFieldsAssignment_1_5()); }
	(rule__Party__FieldsAssignment_1_5)*
	{ after(grammarAccess.getPartyAccess().getFieldsAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_1__6__Impl
	rule__Party__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getActionsAssignment_1_6()); }
	(rule__Party__ActionsAssignment_1_6)*
	{ after(grammarAccess.getPartyAccess().getActionsAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getRightCurlyBracketKeyword_1_7()); }
	'}'
	{ after(grammarAccess.getPartyAccess().getRightCurlyBracketKeyword_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Party__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2__0__Impl
	rule__Party__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getExternalPartyAction_2_0()); }
	()
	{ after(grammarAccess.getPartyAccess().getExternalPartyAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2__1__Impl
	rule__Party__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getExternalKeyword_2_1()); }
	'external'
	{ after(grammarAccess.getPartyAccess().getExternalKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2__2__Impl
	rule__Party__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getPartyKeyword_2_2()); }
	'party'
	{ after(grammarAccess.getPartyAccess().getPartyKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2__3__Impl
	rule__Party__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getNameAssignment_2_3()); }
	(rule__Party__NameAssignment_2_3)
	{ after(grammarAccess.getPartyAccess().getNameAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2__4__Impl
	rule__Party__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getLeftCurlyBracketKeyword_2_4()); }
	'{'
	{ after(grammarAccess.getPartyAccess().getLeftCurlyBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2__5__Impl
	rule__Party__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getGroup_2_5()); }
	(rule__Party__Group_2_5__0)?
	{ after(grammarAccess.getPartyAccess().getGroup_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getRightCurlyBracketKeyword_2_6()); }
	'}'
	{ after(grammarAccess.getPartyAccess().getRightCurlyBracketKeyword_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Party__Group_2_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2_5__0__Impl
	rule__Party__Group_2_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getActionsAssignment_2_5_0()); }
	(rule__Party__ActionsAssignment_2_5_0)
	{ after(grammarAccess.getPartyAccess().getActionsAssignment_2_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getGroup_2_5_1()); }
	(rule__Party__Group_2_5_1__0)*
	{ after(grammarAccess.getPartyAccess().getGroup_2_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Party__Group_2_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2_5_1__0__Impl
	rule__Party__Group_2_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getCommaKeyword_2_5_1_0()); }
	','
	{ after(grammarAccess.getPartyAccess().getCommaKeyword_2_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Party__Group_2_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__Group_2_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartyAccess().getActionsAssignment_2_5_1_1()); }
	(rule__Party__ActionsAssignment_2_5_1_1)
	{ after(grammarAccess.getPartyAccess().getActionsAssignment_2_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNameAssignment_0()); }
	(rule__Action__NameAssignment_0)
	{ after(grammarAccess.getActionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getActionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_2()); }
	(rule__Action__Group_2__0)?
	{ after(grammarAccess.getActionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getActionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__4__Impl
	rule__Action__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_4()); }
	(rule__Action__Group_4__0)?
	{ after(grammarAccess.getActionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__5__Impl
	rule__Action__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSLDTerminalRuleCall_5()); }
	(RULE_SLD)?
	{ after(grammarAccess.getActionAccess().getSLDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_6()); }
	(rule__Action__Group_6__0)?
	{ after(grammarAccess.getActionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__0__Impl
	rule__Action__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getParametersAssignment_2_0()); }
	(rule__Action__ParametersAssignment_2_0)
	{ after(grammarAccess.getActionAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_2_1()); }
	(rule__Action__Group_2_1__0)*
	{ after(grammarAccess.getActionAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2_1__0__Impl
	rule__Action__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getActionAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getParametersAssignment_2_1_1()); }
	(rule__Action__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getActionAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_4__0__Impl
	rule__Action__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getColonKeyword_4_0()); }
	':'
	{ after(grammarAccess.getActionAccess().getColonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getTypeAssignment_4_1()); }
	(rule__Action__TypeAssignment_4_1)
	{ after(grammarAccess.getActionAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_6__0__Impl
	rule__Action__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getIsManyAssignment_6_0()); }
	(rule__Action__IsManyAssignment_6_0)
	{ after(grammarAccess.getActionAccess().getIsManyAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getTimesAssignment_6_1()); }
	(rule__Action__TimesAssignment_6_1)?
	{ after(grammarAccess.getActionAccess().getTimesAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__0__Impl
	rule__Term__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getRightTermAction_0_0()); }
	()
	{ after(grammarAccess.getTermAccess().getRightTermAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__1__Impl
	rule__Term__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getAutoAssignment_0_1()); }
	(rule__Term__AutoAssignment_0_1)?
	{ after(grammarAccess.getTermAccess().getAutoAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__2__Impl
	rule__Term__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getBreakAssignment_0_2()); }
	(rule__Term__BreakAssignment_0_2)?
	{ after(grammarAccess.getTermAccess().getBreakAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__3__Impl
	rule__Term__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getTermKeyword_0_3()); }
	'term'
	{ after(grammarAccess.getTermAccess().getTermKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__4__Impl
	rule__Term__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getNameAssignment_0_4()); }
	(rule__Term__NameAssignment_0_4)
	{ after(grammarAccess.getTermAccess().getNameAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__5__Impl
	rule__Term__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getColonKeyword_0_5()); }
	':'
	{ after(grammarAccess.getTermAccess().getColonKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__6__Impl
	rule__Term__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getPartyAssignment_0_6()); }
	(rule__Term__PartyAssignment_0_6)
	{ after(grammarAccess.getTermAccess().getPartyAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__7__Impl
	rule__Term__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getCanKeyword_0_7()); }
	'can'
	{ after(grammarAccess.getTermAccess().getCanKeyword_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__8__Impl
	rule__Term__Group_0__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getActionAssignment_0_8()); }
	(rule__Term__ActionAssignment_0_8)
	{ after(grammarAccess.getTermAccess().getActionAssignment_0_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__9__Impl
	rule__Term__Group_0__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getCommaKeyword_0_9()); }
	(',')?
	{ after(grammarAccess.getTermAccess().getCommaKeyword_0_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__10__Impl
	rule__Term__Group_0__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_0_10()); }
	(rule__Term__Group_0_10__0)?
	{ after(grammarAccess.getTermAccess().getGroup_0_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__11__Impl
	rule__Term__Group_0__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_0_11()); }
	(rule__Term__Group_0_11__0)?
	{ after(grammarAccess.getTermAccess().getGroup_0_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_0_12()); }
	(rule__Term__Group_0_12__0)?
	{ after(grammarAccess.getTermAccess().getGroup_0_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_0_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0_10__0__Impl
	rule__Term__Group_0_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getWhenKeyword_0_10_0()); }
	'when'
	{ after(grammarAccess.getTermAccess().getWhenKeyword_0_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getConditionAssignment_0_10_1()); }
	(rule__Term__ConditionAssignment_0_10_1)
	{ after(grammarAccess.getTermAccess().getConditionAssignment_0_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_0_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0_11__0__Impl
	rule__Term__Group_0_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getWhileKeyword_0_11_0()); }
	'while'
	{ after(grammarAccess.getTermAccess().getWhileKeyword_0_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTermAccess().getTransferOperationsAssignment_0_11_1()); }
		(rule__Term__TransferOperationsAssignment_0_11_1)
		{ after(grammarAccess.getTermAccess().getTransferOperationsAssignment_0_11_1()); }
	)
	(
		{ before(grammarAccess.getTermAccess().getTransferOperationsAssignment_0_11_1()); }
		(rule__Term__TransferOperationsAssignment_0_11_1)*
		{ after(grammarAccess.getTermAccess().getTransferOperationsAssignment_0_11_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_0_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0_12__0__Impl
	rule__Term__Group_0_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getWhereKeyword_0_12_0()); }
	'where'
	{ after(grammarAccess.getTermAccess().getWhereKeyword_0_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getPostConditionAssignment_0_12_1()); }
	(rule__Term__PostConditionAssignment_0_12_1)
	{ after(grammarAccess.getTermAccess().getPostConditionAssignment_0_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getDutyTermAction_1_0()); }
	()
	{ after(grammarAccess.getTermAccess().getDutyTermAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
	rule__Term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getAutoAssignment_1_1()); }
	(rule__Term__AutoAssignment_1_1)?
	{ after(grammarAccess.getTermAccess().getAutoAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__2__Impl
	rule__Term__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getBreakAssignment_1_2()); }
	(rule__Term__BreakAssignment_1_2)?
	{ after(grammarAccess.getTermAccess().getBreakAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__3__Impl
	rule__Term__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getTermKeyword_1_3()); }
	'term'
	{ after(grammarAccess.getTermAccess().getTermKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__4__Impl
	rule__Term__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getNameAssignment_1_4()); }
	(rule__Term__NameAssignment_1_4)
	{ after(grammarAccess.getTermAccess().getNameAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__5__Impl
	rule__Term__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getColonKeyword_1_5()); }
	':'
	{ after(grammarAccess.getTermAccess().getColonKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__6__Impl
	rule__Term__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getPartyAssignment_1_6()); }
	(rule__Term__PartyAssignment_1_6)
	{ after(grammarAccess.getTermAccess().getPartyAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__7__Impl
	rule__Term__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getMustKeyword_1_7()); }
	'must'
	{ after(grammarAccess.getTermAccess().getMustKeyword_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__8__Impl
	rule__Term__Group_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getActionAssignment_1_8()); }
	(rule__Term__ActionAssignment_1_8)
	{ after(grammarAccess.getTermAccess().getActionAssignment_1_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__9__Impl
	rule__Term__Group_1__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getCommaKeyword_1_9()); }
	(',')?
	{ after(grammarAccess.getTermAccess().getCommaKeyword_1_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__10__Impl
	rule__Term__Group_1__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1_10()); }
	(rule__Term__Group_1_10__0)?
	{ after(grammarAccess.getTermAccess().getGroup_1_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__11__Impl
	rule__Term__Group_1__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1_11()); }
	(rule__Term__Group_1_11__0)?
	{ after(grammarAccess.getTermAccess().getGroup_1_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__12__Impl
	rule__Term__Group_1__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1_12()); }
	(rule__Term__Group_1_12__0)?
	{ after(grammarAccess.getTermAccess().getGroup_1_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1_13()); }
	(rule__Term__Group_1_13__0)?
	{ after(grammarAccess.getTermAccess().getGroup_1_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_10__0__Impl
	rule__Term__Group_1_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getWhenKeyword_1_10_0()); }
	'when'
	{ after(grammarAccess.getTermAccess().getWhenKeyword_1_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getConditionAssignment_1_10_1()); }
	(rule__Term__ConditionAssignment_1_10_1)
	{ after(grammarAccess.getTermAccess().getConditionAssignment_1_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_11__0__Impl
	rule__Term__Group_1_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getWhileKeyword_1_11_0()); }
	'while'
	{ after(grammarAccess.getTermAccess().getWhileKeyword_1_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTermAccess().getTransferOperationsAssignment_1_11_1()); }
		(rule__Term__TransferOperationsAssignment_1_11_1)
		{ after(grammarAccess.getTermAccess().getTransferOperationsAssignment_1_11_1()); }
	)
	(
		{ before(grammarAccess.getTermAccess().getTransferOperationsAssignment_1_11_1()); }
		(rule__Term__TransferOperationsAssignment_1_11_1)*
		{ after(grammarAccess.getTermAccess().getTransferOperationsAssignment_1_11_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_12__0__Impl
	rule__Term__Group_1_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getWhereKeyword_1_12_0()); }
	'where'
	{ after(grammarAccess.getTermAccess().getWhereKeyword_1_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getPostConditionAssignment_1_12_1()); }
	(rule__Term__PostConditionAssignment_1_12_1)
	{ after(grammarAccess.getTermAccess().getPostConditionAssignment_1_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_13__0__Impl
	rule__Term__Group_1_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getBreachKeyword_1_13_0()); }
	'breach'
	{ after(grammarAccess.getTermAccess().getBreachKeyword_1_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTermAccess().getBreachOperationsAssignment_1_13_1()); }
		(rule__Term__BreachOperationsAssignment_1_13_1)
		{ after(grammarAccess.getTermAccess().getBreachOperationsAssignment_1_13_1()); }
	)
	(
		{ before(grammarAccess.getTermAccess().getBreachOperationsAssignment_1_13_1()); }
		(rule__Term__BreachOperationsAssignment_1_13_1)*
		{ after(grammarAccess.getTermAccess().getBreachOperationsAssignment_1_13_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransferOperation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_0__0__Impl
	rule__TransferOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getDepositAction_0_0()); }
	()
	{ after(grammarAccess.getTransferOperationAccess().getDepositAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_0__1__Impl
	rule__TransferOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getDepositKeyword_0_1()); }
	'deposit'
	{ after(grammarAccess.getTransferOperationAccess().getDepositKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getMoneyAssignment_0_2()); }
	(rule__TransferOperation__MoneyAssignment_0_2)
	{ after(grammarAccess.getTransferOperationAccess().getMoneyAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransferOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_1__0__Impl
	rule__TransferOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getWithdrawAction_1_0()); }
	()
	{ after(grammarAccess.getTransferOperationAccess().getWithdrawAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_1__1__Impl
	rule__TransferOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getWithdrawKeyword_1_1()); }
	'withdraw'
	{ after(grammarAccess.getTransferOperationAccess().getWithdrawKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getMoneyAssignment_1_2()); }
	(rule__TransferOperation__MoneyAssignment_1_2)
	{ after(grammarAccess.getTransferOperationAccess().getMoneyAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransferOperation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_2__0__Impl
	rule__TransferOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getTransferAction_2_0()); }
	()
	{ after(grammarAccess.getTransferOperationAccess().getTransferAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_2__1__Impl
	rule__TransferOperation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getTransferKeyword_2_1()); }
	'transfer'
	{ after(grammarAccess.getTransferOperationAccess().getTransferKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_2__2__Impl
	rule__TransferOperation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getMoneyAssignment_2_2()); }
	(rule__TransferOperation__MoneyAssignment_2_2)
	{ after(grammarAccess.getTransferOperationAccess().getMoneyAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_2__3__Impl
	rule__TransferOperation__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getToKeyword_2_3()); }
	'to'
	{ after(grammarAccess.getTransferOperationAccess().getToKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferOperation__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferOperationAccess().getAccountAssignment_2_4()); }
	(rule__TransferOperation__AccountAssignment_2_4)
	{ after(grammarAccess.getTransferOperationAccess().getAccountAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoneyExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoneyExpression__Group__0__Impl
	rule__MoneyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoneyExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoneyExpressionAccess().getMoneyExpressionAction_0()); }
	()
	{ after(grammarAccess.getMoneyExpressionAccess().getMoneyExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoneyExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoneyExpression__Group__1__Impl
	rule__MoneyExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MoneyExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoneyExpressionAccess().getDollarSignKeyword_1()); }
	'$'
	{ after(grammarAccess.getMoneyExpressionAccess().getDollarSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoneyExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoneyExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoneyExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoneyExpressionAccess().getConditionAssignment_2()); }
	(rule__MoneyExpression__ConditionAssignment_2)
	{ after(grammarAccess.getMoneyExpressionAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionSourceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionSourceExpression__Group__0__Impl
	rule__CollectionSourceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionSourceExpressionAccess().getSlotRefParserRuleCall_0()); }
	ruleSlotRef
	{ after(grammarAccess.getCollectionSourceExpressionAccess().getSlotRefParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionSourceExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionSourceExpressionAccess().getGroup_1()); }
	(rule__CollectionSourceExpression__Group_1__0)?
	{ after(grammarAccess.getCollectionSourceExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionSourceExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionSourceExpression__Group_1__0__Impl
	rule__CollectionSourceExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionSourceExpressionAccess().getGroup_1_0()); }
	(rule__CollectionSourceExpression__Group_1_0__0)
	{ after(grammarAccess.getCollectionSourceExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionSourceExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionSourceExpressionAccess().getConditionAssignment_1_1()); }
	(rule__CollectionSourceExpression__ConditionAssignment_1_1)
	{ after(grammarAccess.getCollectionSourceExpressionAccess().getConditionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionSourceExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionSourceExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionSourceExpressionAccess().getGroup_1_0_0()); }
	(rule__CollectionSourceExpression__Group_1_0_0__0)
	{ after(grammarAccess.getCollectionSourceExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionSourceExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionSourceExpression__Group_1_0_0__0__Impl
	rule__CollectionSourceExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionSourceExpressionAccess().getSelectExpressionSourceAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getCollectionSourceExpressionAccess().getSelectExpressionSourceAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionSourceExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionSourceExpressionAccess().getWhereKeyword_1_0_0_1()); }
	'where'
	{ after(grammarAccess.getCollectionSourceExpressionAccess().getWhereKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuantifierExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantifierExpression__Group__0__Impl
	rule__QuantifierExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantifierExpressionAccess().getQunatifierAssignment_0()); }
	(rule__QuantifierExpression__QunatifierAssignment_0)
	{ after(grammarAccess.getQuantifierExpressionAccess().getQunatifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantifierExpression__Group__1__Impl
	rule__QuantifierExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantifierExpressionAccess().getIteratorAssignment_1()); }
	(rule__QuantifierExpression__IteratorAssignment_1)
	{ after(grammarAccess.getQuantifierExpressionAccess().getIteratorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantifierExpression__Group__2__Impl
	rule__QuantifierExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantifierExpressionAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getQuantifierExpressionAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantifierExpression__Group__3__Impl
	rule__QuantifierExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantifierExpressionAccess().getScopeAssignment_3()); }
	(rule__QuantifierExpression__ScopeAssignment_3)
	{ after(grammarAccess.getQuantifierExpressionAccess().getScopeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantifierExpression__Group__4__Impl
	rule__QuantifierExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantifierExpressionAccess().getSuchKeyword_4()); }
	'such'
	{ after(grammarAccess.getQuantifierExpressionAccess().getSuchKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantifierExpression__Group__5__Impl
	rule__QuantifierExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantifierExpressionAccess().getThatKeyword_5()); }
	'that'
	{ after(grammarAccess.getQuantifierExpressionAccess().getThatKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantifierExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantifierExpressionAccess().getConditionAssignment_6()); }
	(rule__QuantifierExpression__ConditionAssignment_6)
	{ after(grammarAccess.getQuantifierExpressionAccess().getConditionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionalExpressionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__1__Impl
	rule__ConditionalExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getConditionAssignment_1()); }
	(rule__ConditionalExpression__ConditionAssignment_1)
	{ after(grammarAccess.getConditionalExpressionAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__2__Impl
	rule__ConditionalExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getConditionalExpressionAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__3__Impl
	rule__ConditionalExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getThenBranchAssignment_3()); }
	(rule__ConditionalExpression__ThenBranchAssignment_3)
	{ after(grammarAccess.getConditionalExpressionAccess().getThenBranchAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__4__Impl
	rule__ConditionalExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getConditionalExpressionAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getElseBranchAssignment_5()); }
	(rule__ConditionalExpression__ElseBranchAssignment_5)
	{ after(grammarAccess.getConditionalExpressionAccess().getElseBranchAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplyExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplyExpression__Group__0__Impl
	rule__ImplyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyExpressionAccess().getOrExpressionParserRuleCall_0()); }
	ruleOrExpression
	{ after(grammarAccess.getImplyExpressionAccess().getOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplyExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyExpressionAccess().getGroup_1()); }
	(rule__ImplyExpression__Group_1__0)?
	{ after(grammarAccess.getImplyExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplyExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplyExpression__Group_1__0__Impl
	rule__ImplyExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyExpressionAccess().getGroup_1_0()); }
	(rule__ImplyExpression__Group_1_0__0)
	{ after(grammarAccess.getImplyExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplyExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyExpressionAccess().getImpliedAssignment_1_1()); }
	(rule__ImplyExpression__ImpliedAssignment_1_1)
	{ after(grammarAccess.getImplyExpressionAccess().getImpliedAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplyExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplyExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyExpressionAccess().getGroup_1_0_0()); }
	(rule__ImplyExpression__Group_1_0_0__0)
	{ after(grammarAccess.getImplyExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplyExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplyExpression__Group_1_0_0__0__Impl
	rule__ImplyExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyExpressionAccess().getImplyExpressionConditionAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getImplyExpressionAccess().getImplyExpressionConditionAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplyExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplyExpressionAccess().getImpliesKeyword_1_0_0_1()); }
	'implies'
	{ after(grammarAccess.getImplyExpressionAccess().getImpliesKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)?
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
	(rule__OrExpression__Group_1_0__0)
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1()); }
	(rule__OrExpression__RightAssignment_1_1)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
	(rule__OrExpression__Group_1_0_0__0)
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1_0_0__0__Impl
	rule__OrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAlternatives_1_0_0_1()); }
	(rule__OrExpression__Alternatives_1_0_0_1)
	{ after(grammarAccess.getOrExpressionAccess().getAlternatives_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndExpressionChildParserRuleCall_0()); }
	ruleAndExpressionChild
	{ after(grammarAccess.getAndExpressionAccess().getAndExpressionChildParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)?
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
	(rule__AndExpression__Group_1_0__0)
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
	(rule__AndExpression__RightAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
	(rule__AndExpression__Group_1_0_0__0)
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0_0__0__Impl
	rule__AndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAlternatives_1_0_0_1()); }
	(rule__AndExpression__Alternatives_1_0_0_1)
	{ after(grammarAccess.getAndExpressionAccess().getAlternatives_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotExpression__Group__0__Impl
	rule__NotExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotExpressionAccess().getNotKeyword_0()); }
	'not'
	{ after(grammarAccess.getNotExpressionAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotExpressionAccess().getInnerAssignment_1()); }
	(rule__NotExpression__InnerAssignment_1)
	{ after(grammarAccess.getNotExpressionAccess().getInnerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getArithmeticExpressionParserRuleCall_0()); }
	ruleArithmeticExpression
	{ after(grammarAccess.getRelationalExpressionAccess().getArithmeticExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
	(rule__RelationalExpression__Group_1__0)?
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
	(rule__RelationalExpression__Group_1_0__0)
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_1()); }
	(rule__RelationalExpression__RightAssignment_1_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
	(rule__RelationalExpression__Group_1_0_0__0)
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0_0__0__Impl
	rule__RelationalExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_0_0_1()); }
	(rule__RelationalExpression__OperatorAssignment_1_0_0_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)?
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
	(rule__AdditiveExpression__Group_1_0__0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_1()); }
	(rule__AdditiveExpression__RightAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
	(rule__AdditiveExpression__Group_1_0_0__0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0_0__0__Impl
	rule__AdditiveExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_0_0_1()); }
	(rule__AdditiveExpression__OperatorAssignment_1_0_0_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getAtomExpressionParserRuleCall_0()); }
	ruleAtomExpression
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getAtomExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)?
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
	(rule__MultiplicativeExpression__Group_1_0__0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_1()); }
	(rule__MultiplicativeExpression__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
	(rule__MultiplicativeExpression__Group_1_0_0__0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0_0__0__Impl
	rule__MultiplicativeExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_0_0_1()); }
	(rule__MultiplicativeExpression__OperatorAssignment_1_0_0_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomExpression__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomExpression__Group_9__0__Impl
	rule__AtomExpression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpression__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomExpressionAccess().getLeftParenthesisKeyword_9_0()); }
	'('
	{ after(grammarAccess.getAtomExpressionAccess().getLeftParenthesisKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpression__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomExpression__Group_9__1__Impl
	rule__AtomExpression__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpression__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomExpressionAccess().getExpressionParserRuleCall_9_1()); }
	ruleExpression
	{ after(grammarAccess.getAtomExpressionAccess().getExpressionParserRuleCall_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpression__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomExpression__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpression__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomExpressionAccess().getRightParenthesisKeyword_9_2()); }
	')'
	{ after(grammarAccess.getAtomExpressionAccess().getRightParenthesisKeyword_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThisExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThisExpression__Group__0__Impl
	rule__ThisExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisExpressionAccess().getThisExpressionAction_0()); }
	()
	{ after(grammarAccess.getThisExpressionAccess().getThisExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThisExpression__Group__1__Impl
	rule__ThisExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisExpressionAccess().getAlternatives_1()); }
	(rule__ThisExpression__Alternatives_1)
	{ after(grammarAccess.getThisExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThisExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisExpressionAccess().getGroup_2()); }
	(rule__ThisExpression__Group_2__0)?
	{ after(grammarAccess.getThisExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThisExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThisExpression__Group_1_0__0__Impl
	rule__ThisExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisExpressionAccess().getThisKeyword_1_0_0()); }
	'this'
	{ after(grammarAccess.getThisExpressionAccess().getThisKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThisExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisExpressionAccess().getIDTerminalRuleCall_1_0_1()); }
	(RULE_ID)?
	{ after(grammarAccess.getThisExpressionAccess().getIDTerminalRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThisExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThisExpression__Group_2__0__Impl
	rule__ThisExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisExpressionAccess().getColonColonKeyword_2_0()); }
	'::'
	{ after(grammarAccess.getThisExpressionAccess().getColonColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThisExpression__Group_2__1__Impl
	rule__ThisExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisExpressionAccess().getTransitiveAssignment_2_1()); }
	(rule__ThisExpression__TransitiveAssignment_2_1)?
	{ after(grammarAccess.getThisExpressionAccess().getTransitiveAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThisExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThisExpressionAccess().getNextAssignment_2_2()); }
	(rule__ThisExpression__NextAssignment_2_2)
	{ after(grammarAccess.getThisExpressionAccess().getNextAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SlotRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SlotRef__Group__0__Impl
	rule__SlotRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlotRefAccess().getSlotAssignment_0()); }
	(rule__SlotRef__SlotAssignment_0)
	{ after(grammarAccess.getSlotRefAccess().getSlotAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SlotRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlotRefAccess().getGroup_1()); }
	(rule__SlotRef__Group_1__0)?
	{ after(grammarAccess.getSlotRefAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SlotRef__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SlotRef__Group_1__0__Impl
	rule__SlotRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlotRefAccess().getColonColonKeyword_1_0()); }
	'::'
	{ after(grammarAccess.getSlotRefAccess().getColonColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SlotRef__Group_1__1__Impl
	rule__SlotRef__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlotRefAccess().getTransitiveAssignment_1_1()); }
	(rule__SlotRef__TransitiveAssignment_1_1)?
	{ after(grammarAccess.getSlotRefAccess().getTransitiveAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SlotRef__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlotRefAccess().getNextAssignment_1_2()); }
	(rule__SlotRef__NextAssignment_1_2)
	{ after(grammarAccess.getSlotRefAccess().getNextAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_0__0__Impl
	rule__ConstantExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getIntegerConstantAction_0_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getIntegerConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_0_1()); }
	(rule__ConstantExpression__ValueAssignment_0_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_1__0__Impl
	rule__ConstantExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getStringConstantAction_1_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getStringConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
	(rule__ConstantExpression__ValueAssignment_1_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_2__0__Impl
	rule__ConstantExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getBooleanconstantAction_2_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getBooleanconstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_2_1()); }
	(rule__ConstantExpression__ValueAssignment_2_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_3__0__Impl
	rule__ConstantExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getFloatConstantAction_3_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getFloatConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_3_1()); }
	(rule__ConstantExpression__ValueAssignment_3_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_4__0__Impl
	rule__ConstantExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueconstantAction_4_0()); }
	()
	{ after(grammarAccess.getConstantExpressionAccess().getValueconstantAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_4_1()); }
	(rule__ConstantExpression__ValueAssignment_4_1)
	{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group__0__Impl
	rule__Float__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getAlternatives_0()); }
	(rule__Float__Alternatives_0)?
	{ after(grammarAccess.getFloatAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getAlternatives_1()); }
	(rule__Float__Alternatives_1)
	{ after(grammarAccess.getFloatAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group_1_0__0__Impl
	rule__Float__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_0_0()); }
	RULE_INT
	{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group_1_0__1__Impl
	rule__Float__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getFullStopKeyword_1_0_1()); }
	'.'
	{ after(grammarAccess.getFloatAccess().getFullStopKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_0_2()); }
	(RULE_INT)?
	{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group_1_1__0__Impl
	rule__Float__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getFullStopKeyword_1_1_0()); }
	'.'
	{ after(grammarAccess.getFloatAccess().getFullStopKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_1_1()); }
	RULE_INT
	{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Integer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Integer__Group__0__Impl
	rule__Integer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Integer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleTimePredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleTimePredicate__Group__0__Impl
	rule__SimpleTimePredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTimePredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTimePredicateAccess().getOperatorAssignment_0()); }
	(rule__SimpleTimePredicate__OperatorAssignment_0)
	{ after(grammarAccess.getSimpleTimePredicateAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTimePredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleTimePredicate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTimePredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTimePredicateAccess().getBaseAssignment_1()); }
	(rule__SimpleTimePredicate__BaseAssignment_1)
	{ after(grammarAccess.getSimpleTimePredicateAccess().getBaseAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoundedTimePredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundedTimePredicate__Group__0__Impl
	rule__BoundedTimePredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundedTimePredicateAccess().getClosedAssignment_0()); }
	(rule__BoundedTimePredicate__ClosedAssignment_0)?
	{ after(grammarAccess.getBoundedTimePredicateAccess().getClosedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundedTimePredicate__Group__1__Impl
	rule__BoundedTimePredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundedTimePredicateAccess().getBoundAssignment_1()); }
	(rule__BoundedTimePredicate__BoundAssignment_1)
	{ after(grammarAccess.getBoundedTimePredicateAccess().getBoundAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundedTimePredicate__Group__2__Impl
	rule__BoundedTimePredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundedTimePredicateAccess().getOperatorAssignment_2()); }
	(rule__BoundedTimePredicate__OperatorAssignment_2)
	{ after(grammarAccess.getBoundedTimePredicateAccess().getOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundedTimePredicate__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundedTimePredicateAccess().getBaseAssignment_3()); }
	(rule__BoundedTimePredicate__BaseAssignment_3)
	{ after(grammarAccess.getBoundedTimePredicateAccess().getBaseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PeriodicTimePredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group__0__Impl
	rule__PeriodicTimePredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getByKeyword_0()); }
	'by'
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getByKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group__1__Impl
	rule__PeriodicTimePredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getGroup_1()); }
	(rule__PeriodicTimePredicate__Group_1__0)?
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group__2__Impl
	rule__PeriodicTimePredicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getEveryKeyword_2()); }
	'every'
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getEveryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group__3__Impl
	rule__PeriodicTimePredicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getBaseAssignment_3()); }
	(rule__PeriodicTimePredicate__BaseAssignment_3)
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getBaseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getAlternatives_4()); }
	(rule__PeriodicTimePredicate__Alternatives_4)?
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PeriodicTimePredicate__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group_1__0__Impl
	rule__PeriodicTimePredicate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getOperatorAssignment_1_0()); }
	(rule__PeriodicTimePredicate__OperatorAssignment_1_0)
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getPeriodDateAssignment_1_1()); }
	(rule__PeriodicTimePredicate__PeriodDateAssignment_1_1)
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getPeriodDateAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PeriodicTimePredicate__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group_4_0__0__Impl
	rule__PeriodicTimePredicate__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getInKeyword_4_0_0()); }
	'in'
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getInKeyword_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getPeriodAssignment_4_0_1()); }
	(rule__PeriodicTimePredicate__PeriodAssignment_4_0_1)
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getPeriodAssignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PeriodicTimePredicate__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group_4_1__0__Impl
	rule__PeriodicTimePredicate__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getFromKeyword_4_1_0()); }
	'from'
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getFromKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group_4_1__1__Impl
	rule__PeriodicTimePredicate__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getBasefromAssignment_4_1_1()); }
	(rule__PeriodicTimePredicate__BasefromAssignment_4_1_1)
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getBasefromAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group_4_1__2__Impl
	rule__PeriodicTimePredicate__Group_4_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getToKeyword_4_1_2()); }
	'to'
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getToKeyword_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_4_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodicTimePredicate__Group_4_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__Group_4_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicTimePredicateAccess().getBasetoAssignment_4_1_3()); }
	(rule__PeriodicTimePredicate__BasetoAssignment_4_1_3)
	{ after(grammarAccess.getPeriodicTimePredicateAccess().getBasetoAssignment_4_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionEnforcedTimeQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEnforcedTimeQuery__Group__0__Impl
	rule__ActionEnforcedTimeQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnforcedTimeQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEnforcedTimeQueryAccess().getMultiplicityAssignment_0()); }
	(rule__ActionEnforcedTimeQuery__MultiplicityAssignment_0)?
	{ after(grammarAccess.getActionEnforcedTimeQueryAccess().getMultiplicityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnforcedTimeQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEnforcedTimeQuery__Group__1__Impl
	rule__ActionEnforcedTimeQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnforcedTimeQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEnforcedTimeQueryAccess().getPartyAssignment_1()); }
	(rule__ActionEnforcedTimeQuery__PartyAssignment_1)
	{ after(grammarAccess.getActionEnforcedTimeQueryAccess().getPartyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnforcedTimeQuery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEnforcedTimeQuery__Group__2__Impl
	rule__ActionEnforcedTimeQuery__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnforcedTimeQuery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEnforcedTimeQueryAccess().getDidKeyword_2()); }
	'did'
	{ after(grammarAccess.getActionEnforcedTimeQueryAccess().getDidKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnforcedTimeQuery__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEnforcedTimeQuery__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnforcedTimeQuery__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEnforcedTimeQueryAccess().getActionAssignment_3()); }
	(rule__ActionEnforcedTimeQuery__ActionAssignment_3)
	{ after(grammarAccess.getActionEnforcedTimeQueryAccess().getActionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermValidTimeQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermValidTimeQuery__Group__0__Impl
	rule__TermValidTimeQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermValidTimeQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermValidTimeQueryAccess().getTermAssignment_0()); }
	(rule__TermValidTimeQuery__TermAssignment_0)
	{ after(grammarAccess.getTermValidTimeQueryAccess().getTermAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermValidTimeQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermValidTimeQuery__Group__1__Impl
	rule__TermValidTimeQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TermValidTimeQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermValidTimeQueryAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getTermValidTimeQueryAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermValidTimeQuery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermValidTimeQuery__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermValidTimeQuery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermValidTimeQueryAccess().getValidKeyword_2()); }
	'valid'
	{ after(grammarAccess.getTermValidTimeQueryAccess().getValidKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLine__Group__0__Impl
	rule__TimeLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLineAccess().getBaseAssignment_0()); }
	(rule__TimeLine__BaseAssignment_0)
	{ after(grammarAccess.getTimeLineAccess().getBaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLine__Group__1__Impl
	rule__TimeLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLineAccess().getOperatorAssignment_1()); }
	(rule__TimeLine__OperatorAssignment_1)
	{ after(grammarAccess.getTimeLineAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLineAccess().getDeviationAssignment_2()); }
	(rule__TimeLine__DeviationAssignment_2)
	{ after(grammarAccess.getTimeLineAccess().getDeviationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeConstant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group__0__Impl
	rule__TimeConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getTimeConstantAction_0()); }
	()
	{ after(grammarAccess.getTimeConstantAccess().getTimeConstantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group__1__Impl
	rule__TimeConstant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getGroup_1()); }
	(rule__TimeConstant__Group_1__0)?
	{ after(grammarAccess.getTimeConstantAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group__2__Impl
	rule__TimeConstant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getGroup_2()); }
	(rule__TimeConstant__Group_2__0)?
	{ after(grammarAccess.getTimeConstantAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group__3__Impl
	rule__TimeConstant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getGroup_3()); }
	(rule__TimeConstant__Group_3__0)?
	{ after(grammarAccess.getTimeConstantAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group__4__Impl
	rule__TimeConstant__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getGroup_4()); }
	(rule__TimeConstant__Group_4__0)?
	{ after(grammarAccess.getTimeConstantAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group__5__Impl
	rule__TimeConstant__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getGroup_5()); }
	(rule__TimeConstant__Group_5__0)?
	{ after(grammarAccess.getTimeConstantAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group__6__Impl
	rule__TimeConstant__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getGroup_6()); }
	(rule__TimeConstant__Group_6__0)?
	{ after(grammarAccess.getTimeConstantAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getGroup_7()); }
	(rule__TimeConstant__Group_7__0)?
	{ after(grammarAccess.getTimeConstantAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeConstant__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_1__0__Impl
	rule__TimeConstant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getYearAssignment_1_0()); }
	(rule__TimeConstant__YearAssignment_1_0)
	{ after(grammarAccess.getTimeConstantAccess().getYearAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getYearKeyword_1_1()); }
	'year'
	{ after(grammarAccess.getTimeConstantAccess().getYearKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeConstant__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_2__0__Impl
	rule__TimeConstant__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getMonthAssignment_2_0()); }
	(rule__TimeConstant__MonthAssignment_2_0)
	{ after(grammarAccess.getTimeConstantAccess().getMonthAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getMonthKeyword_2_1()); }
	'month'
	{ after(grammarAccess.getTimeConstantAccess().getMonthKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeConstant__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_3__0__Impl
	rule__TimeConstant__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getDayAssignment_3_0()); }
	(rule__TimeConstant__DayAssignment_3_0)
	{ after(grammarAccess.getTimeConstantAccess().getDayAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getDayKeyword_3_1()); }
	'day'
	{ after(grammarAccess.getTimeConstantAccess().getDayKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeConstant__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_4__0__Impl
	rule__TimeConstant__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getHourAssignment_4_0()); }
	(rule__TimeConstant__HourAssignment_4_0)
	{ after(grammarAccess.getTimeConstantAccess().getHourAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getHourKeyword_4_1()); }
	'hour'
	{ after(grammarAccess.getTimeConstantAccess().getHourKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeConstant__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_5__0__Impl
	rule__TimeConstant__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getMinAssignment_5_0()); }
	(rule__TimeConstant__MinAssignment_5_0)
	{ after(grammarAccess.getTimeConstantAccess().getMinAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getMinKeyword_5_1()); }
	'min'
	{ after(grammarAccess.getTimeConstantAccess().getMinKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeConstant__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_6__0__Impl
	rule__TimeConstant__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getSecAssignment_6_0()); }
	(rule__TimeConstant__SecAssignment_6_0)
	{ after(grammarAccess.getTimeConstantAccess().getSecAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getSecKeyword_6_1()); }
	'sec'
	{ after(grammarAccess.getTimeConstantAccess().getSecKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeConstant__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_7__0__Impl
	rule__TimeConstant__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getDateAssignment_7_0()); }
	(rule__TimeConstant__DateAssignment_7_0)
	{ after(grammarAccess.getTimeConstantAccess().getDateAssignment_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstant__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstantAccess().getThKeyword_7_1()); }
	'th'
	{ after(grammarAccess.getTimeConstantAccess().getThKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeVarExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeVarExpression__Group__0__Impl
	rule__TimeVarExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeVarExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeVarExpressionAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getTimeVarExpressionAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeVarExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeVarExpression__Group__1__Impl
	rule__TimeVarExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeVarExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeVarExpressionAccess().getSlotAssignment_1()); }
	(rule__TimeVarExpression__SlotAssignment_1)
	{ after(grammarAccess.getTimeVarExpressionAccess().getSlotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeVarExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeVarExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeVarExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeVarExpressionAccess().getGroup_2()); }
	(rule__TimeVarExpression__Group_2__0)?
	{ after(grammarAccess.getTimeVarExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeVarExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeVarExpression__Group_2__0__Impl
	rule__TimeVarExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeVarExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeVarExpressionAccess().getColonColonKeyword_2_0()); }
	'::'
	{ after(grammarAccess.getTimeVarExpressionAccess().getColonColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeVarExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeVarExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeVarExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeVarExpressionAccess().getNextAssignment_2_1()); }
	(rule__TimeVarExpression__NextAssignment_2_1)
	{ after(grammarAccess.getTimeVarExpressionAccess().getNextAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeThisExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeThisExpression__Group__0__Impl
	rule__TimeThisExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeThisExpressionAccess().getThisExpressionAction_0()); }
	()
	{ after(grammarAccess.getTimeThisExpressionAccess().getThisExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeThisExpression__Group__1__Impl
	rule__TimeThisExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeThisExpressionAccess().getCommercialAtKeyword_1()); }
	'@'
	{ after(grammarAccess.getTimeThisExpressionAccess().getCommercialAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeThisExpression__Group__2__Impl
	rule__TimeThisExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeThisExpressionAccess().getAlternatives_2()); }
	(rule__TimeThisExpression__Alternatives_2)
	{ after(grammarAccess.getTimeThisExpressionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeThisExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeThisExpressionAccess().getGroup_3()); }
	(rule__TimeThisExpression__Group_3__0)?
	{ after(grammarAccess.getTimeThisExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeThisExpression__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeThisExpression__Group_2_0__0__Impl
	rule__TimeThisExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeThisExpressionAccess().getThisKeyword_2_0_0()); }
	'this'
	{ after(grammarAccess.getTimeThisExpressionAccess().getThisKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeThisExpression__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeThisExpressionAccess().getIDTerminalRuleCall_2_0_1()); }
	RULE_ID
	{ after(grammarAccess.getTimeThisExpressionAccess().getIDTerminalRuleCall_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeThisExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeThisExpression__Group_3__0__Impl
	rule__TimeThisExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeThisExpressionAccess().getColonColonKeyword_3_0()); }
	'::'
	{ after(grammarAccess.getTimeThisExpressionAccess().getColonColonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeThisExpression__Group_3__1__Impl
	rule__TimeThisExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeThisExpressionAccess().getTransitiveAssignment_3_1()); }
	(rule__TimeThisExpression__TransitiveAssignment_3_1)?
	{ after(grammarAccess.getTimeThisExpressionAccess().getTransitiveAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeThisExpression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeThisExpressionAccess().getNextAssignment_3_2()); }
	(rule__TimeThisExpression__NextAssignment_3_2)
	{ after(grammarAccess.getTimeThisExpressionAccess().getNextAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contract__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__PartiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getPartiesPartyParserRuleCall_3_0()); }
		ruleParty
		{ after(grammarAccess.getContractAccess().getPartiesPartyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__FieldsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getFieldsFieldParserRuleCall_4_0()); }
		ruleField
		{ after(grammarAccess.getContractAccess().getFieldsFieldParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__TermsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getTermsTermParserRuleCall_5_0_0()); }
		ruleTerm
		{ after(grammarAccess.getContractAccess().getTermsTermParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__TypesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getTypesComplexTypeParserRuleCall_6_0()); }
		ruleComplexType
		{ after(grammarAccess.getContractAccess().getTypesComplexTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__AssetsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getAssetsAssetParserRuleCall_7_0()); }
		ruleAsset
		{ after(grammarAccess.getContractAccess().getAssetsAssetParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getComplexTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__FieldsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeAccess().getFieldsFieldParserRuleCall_3_0()); }
		ruleField
		{ after(grammarAccess.getComplexTypeAccess().getFieldsFieldParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssetAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAssetAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__FieldsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssetAccess().getFieldsFieldParserRuleCall_5_0()); }
		ruleField
		{ after(grammarAccess.getAssetAccess().getFieldsFieldParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asset__FieldsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssetAccess().getFieldsFieldParserRuleCall_9_0()); }
		ruleField
		{ after(grammarAccess.getAssetAccess().getFieldsFieldParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSelectionAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__ManyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getManySetKeyword_2_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getManySetKeyword_2_0()); }
			'set'
			{ after(grammarAccess.getFieldAccess().getManySetKeyword_2_0()); }
		)
		{ after(grammarAccess.getFieldAccess().getManySetKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeTypeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getTypeTypeIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFieldAccess().getTypeTypeIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getFieldAccess().getTypeTypeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__NameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartyAccess().getNameIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPartyAccess().getNameIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__FieldsAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartyAccess().getFieldsFieldParserRuleCall_0_4_0()); }
		ruleField
		{ after(grammarAccess.getPartyAccess().getFieldsFieldParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__ActionsAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_0_5_0()); }
		ruleAction
		{ after(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__NameAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartyAccess().getNameIDTerminalRuleCall_1_3_0()); }
		RULE_ID
		{ after(grammarAccess.getPartyAccess().getNameIDTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__FieldsAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartyAccess().getFieldsFieldParserRuleCall_1_5_0()); }
		ruleField
		{ after(grammarAccess.getPartyAccess().getFieldsFieldParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__ActionsAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_1_6_0()); }
		ruleAction
		{ after(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__NameAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartyAccess().getNameIDTerminalRuleCall_2_3_0()); }
		RULE_ID
		{ after(grammarAccess.getPartyAccess().getNameIDTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__ActionsAssignment_2_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_2_5_0_0()); }
		ruleAction
		{ after(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_2_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Party__ActionsAssignment_2_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_2_5_1_1_0()); }
		ruleAction
		{ after(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_2_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getParametersFieldParserRuleCall_2_0_0()); }
		ruleField
		{ after(grammarAccess.getActionAccess().getParametersFieldParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getParametersFieldParserRuleCall_2_1_1_0()); }
		ruleField
		{ after(grammarAccess.getActionAccess().getParametersFieldParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getTypeTypeCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getActionAccess().getTypeTypeIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionAccess().getTypeTypeIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getActionAccess().getTypeTypeCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__IsManyAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getIsManyPlusSignKeyword_6_0_0()); }
		(
			{ before(grammarAccess.getActionAccess().getIsManyPlusSignKeyword_6_0_0()); }
			'+'
			{ after(grammarAccess.getActionAccess().getIsManyPlusSignKeyword_6_0_0()); }
		)
		{ after(grammarAccess.getActionAccess().getIsManyPlusSignKeyword_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TimesAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getTimesINTTerminalRuleCall_6_1_0()); }
		RULE_INT
		{ after(grammarAccess.getActionAccess().getTimesINTTerminalRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__AutoAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getAutoAutoKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getTermAccess().getAutoAutoKeyword_0_1_0()); }
			'auto'
			{ after(grammarAccess.getTermAccess().getAutoAutoKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getTermAccess().getAutoAutoKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__BreakAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getBreakBreakKeyword_0_2_0()); }
		(
			{ before(grammarAccess.getTermAccess().getBreakBreakKeyword_0_2_0()); }
			'break'
			{ after(grammarAccess.getTermAccess().getBreakBreakKeyword_0_2_0()); }
		)
		{ after(grammarAccess.getTermAccess().getBreakBreakKeyword_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__NameAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getNameIDTerminalRuleCall_0_4_0()); }
		RULE_ID
		{ after(grammarAccess.getTermAccess().getNameIDTerminalRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__PartyAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getPartyPartyCrossReference_0_6_0()); }
		(
			{ before(grammarAccess.getTermAccess().getPartyPartyIDTerminalRuleCall_0_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTermAccess().getPartyPartyIDTerminalRuleCall_0_6_0_1()); }
		)
		{ after(grammarAccess.getTermAccess().getPartyPartyCrossReference_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__ActionAssignment_0_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getActionActionCrossReference_0_8_0()); }
		(
			{ before(grammarAccess.getTermAccess().getActionActionIDTerminalRuleCall_0_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTermAccess().getActionActionIDTerminalRuleCall_0_8_0_1()); }
		)
		{ after(grammarAccess.getTermAccess().getActionActionCrossReference_0_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__ConditionAssignment_0_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getConditionExpressionParserRuleCall_0_10_1_0()); }
		ruleExpression
		{ after(grammarAccess.getTermAccess().getConditionExpressionParserRuleCall_0_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__TransferOperationsAssignment_0_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getTransferOperationsTransferOperationParserRuleCall_0_11_1_0()); }
		ruleTransferOperation
		{ after(grammarAccess.getTermAccess().getTransferOperationsTransferOperationParserRuleCall_0_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__PostConditionAssignment_0_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getPostConditionExpressionParserRuleCall_0_12_1_0()); }
		ruleExpression
		{ after(grammarAccess.getTermAccess().getPostConditionExpressionParserRuleCall_0_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__AutoAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getAutoAutoKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getTermAccess().getAutoAutoKeyword_1_1_0()); }
			'auto'
			{ after(grammarAccess.getTermAccess().getAutoAutoKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getTermAccess().getAutoAutoKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__BreakAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getBreakBreakKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getTermAccess().getBreakBreakKeyword_1_2_0()); }
			'break'
			{ after(grammarAccess.getTermAccess().getBreakBreakKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getTermAccess().getBreakBreakKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__NameAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getNameIDTerminalRuleCall_1_4_0()); }
		RULE_ID
		{ after(grammarAccess.getTermAccess().getNameIDTerminalRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__PartyAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getPartyPartyCrossReference_1_6_0()); }
		(
			{ before(grammarAccess.getTermAccess().getPartyPartyIDTerminalRuleCall_1_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTermAccess().getPartyPartyIDTerminalRuleCall_1_6_0_1()); }
		)
		{ after(grammarAccess.getTermAccess().getPartyPartyCrossReference_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__ActionAssignment_1_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getActionActionCrossReference_1_8_0()); }
		(
			{ before(grammarAccess.getTermAccess().getActionActionIDTerminalRuleCall_1_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTermAccess().getActionActionIDTerminalRuleCall_1_8_0_1()); }
		)
		{ after(grammarAccess.getTermAccess().getActionActionCrossReference_1_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__ConditionAssignment_1_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getConditionExpressionParserRuleCall_1_10_1_0()); }
		ruleExpression
		{ after(grammarAccess.getTermAccess().getConditionExpressionParserRuleCall_1_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__TransferOperationsAssignment_1_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getTransferOperationsTransferOperationParserRuleCall_1_11_1_0()); }
		ruleTransferOperation
		{ after(grammarAccess.getTermAccess().getTransferOperationsTransferOperationParserRuleCall_1_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__PostConditionAssignment_1_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getPostConditionExpressionParserRuleCall_1_12_1_0()); }
		ruleExpression
		{ after(grammarAccess.getTermAccess().getPostConditionExpressionParserRuleCall_1_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__BreachOperationsAssignment_1_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getBreachOperationsTransferOperationParserRuleCall_1_13_1_0()); }
		ruleTransferOperation
		{ after(grammarAccess.getTermAccess().getBreachOperationsTransferOperationParserRuleCall_1_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__MoneyAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransferOperationAccess().getMoneyMoneyExpressionParserRuleCall_0_2_0()); }
		ruleMoneyExpression
		{ after(grammarAccess.getTransferOperationAccess().getMoneyMoneyExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__MoneyAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransferOperationAccess().getMoneyMoneyExpressionParserRuleCall_1_2_0()); }
		ruleMoneyExpression
		{ after(grammarAccess.getTransferOperationAccess().getMoneyMoneyExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__MoneyAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransferOperationAccess().getMoneyMoneyExpressionParserRuleCall_2_2_0()); }
		ruleMoneyExpression
		{ after(grammarAccess.getTransferOperationAccess().getMoneyMoneyExpressionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferOperation__AccountAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransferOperationAccess().getAccountExpressionParserRuleCall_2_4_0()); }
		ruleExpression
		{ after(grammarAccess.getTransferOperationAccess().getAccountExpressionParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoneyExpression__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoneyExpressionAccess().getConditionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getMoneyExpressionAccess().getConditionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptiveExpression__PlainTextAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptiveExpressionAccess().getPlainTextPLAINTEXTTerminalRuleCall_0()); }
		RULE_PLAINTEXT
		{ after(grammarAccess.getDescriptiveExpressionAccess().getPlainTextPLAINTEXTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionSourceExpression__ConditionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionSourceExpressionAccess().getConditionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCollectionSourceExpressionAccess().getConditionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IteratorDeclExpression__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteratorDeclExpressionAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getIteratorDeclExpressionAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__QunatifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierExpressionAccess().getQunatifierQuantifierEnumRuleCall_0_0()); }
		ruleQuantifier
		{ after(grammarAccess.getQuantifierExpressionAccess().getQunatifierQuantifierEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__IteratorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierExpressionAccess().getIteratorIteratorDeclExpressionParserRuleCall_1_0()); }
		ruleIteratorDeclExpression
		{ after(grammarAccess.getQuantifierExpressionAccess().getIteratorIteratorDeclExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__ScopeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierExpressionAccess().getScopeCollectionSourceExpressionParserRuleCall_3_0()); }
		ruleCollectionSourceExpression
		{ after(grammarAccess.getQuantifierExpressionAccess().getScopeCollectionSourceExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifierExpression__ConditionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierExpressionAccess().getConditionExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getQuantifierExpressionAccess().getConditionExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getConditionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getConditionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ThenBranchAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getThenBranchExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getThenBranchExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ElseBranchAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getElseBranchExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getElseBranchExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplyExpression__ImpliedAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplyExpressionAccess().getImpliedExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getImplyExpressionAccess().getImpliedExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightOrExpressionParserRuleCall_1_1_0()); }
		ruleOrExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightOrExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
		ruleAndExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__InnerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotExpressionAccess().getInnerRelationalExpressionParserRuleCall_1_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getNotExpressionAccess().getInnerRelationalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorRelationOperatorEnumRuleCall_1_0_0_1_0()); }
		ruleRelationOperator
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorRelationOperatorEnumRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getRightArithmeticExpressionParserRuleCall_1_1_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getRightArithmeticExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperatorAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorEnumRuleCall_1_0_0_1_0()); }
		ruleAdditiveOperator
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorEnumRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperatorAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); }
		ruleMultiplicativeOperator
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAtomExpressionParserRuleCall_1_1_0()); }
		ruleAtomExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAtomExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__TransitiveAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThisExpressionAccess().getTransitiveTransitiveOperatorEnumRuleCall_2_1_0()); }
		ruleTransitiveOperator
		{ after(grammarAccess.getThisExpressionAccess().getTransitiveTransitiveOperatorEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__NextAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThisExpressionAccess().getNextSlotRefParserRuleCall_2_2_0()); }
		ruleSlotRef
		{ after(grammarAccess.getThisExpressionAccess().getNextSlotRefParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__SlotAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSlotRefAccess().getSlotDataSlotCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSlotRefAccess().getSlotDataSlotIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSlotRefAccess().getSlotDataSlotIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSlotRefAccess().getSlotDataSlotCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__TransitiveAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSlotRefAccess().getTransitiveTransitiveOperatorEnumRuleCall_1_1_0()); }
		ruleTransitiveOperator
		{ after(grammarAccess.getSlotRefAccess().getTransitiveTransitiveOperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SlotRef__NextAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSlotRefAccess().getNextSlotRefParserRuleCall_1_2_0()); }
		ruleSlotRef
		{ after(grammarAccess.getSlotRefAccess().getNextSlotRefParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueIntegerParserRuleCall_0_1_0()); }
		ruleInteger
		{ after(grammarAccess.getConstantExpressionAccess().getValueIntegerParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getConstantExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueBooleanParserRuleCall_2_1_0()); }
		ruleBoolean
		{ after(grammarAccess.getConstantExpressionAccess().getValueBooleanParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueFloatParserRuleCall_3_1_0()); }
		ruleFloat
		{ after(grammarAccess.getConstantExpressionAccess().getValueFloatParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getValueValueKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getConstantExpressionAccess().getValueValueKeyword_4_1_0()); }
			'value'
			{ after(grammarAccess.getConstantExpressionAccess().getValueValueKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getConstantExpressionAccess().getValueValueKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTimePredicate__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTimePredicateAccess().getOperatorTimePredicateOperatorEnumRuleCall_0_0()); }
		ruleTimePredicateOperator
		{ after(grammarAccess.getSimpleTimePredicateAccess().getOperatorTimePredicateOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTimePredicate__BaseAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTimePredicateAccess().getBaseExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleTimePredicateAccess().getBaseExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__ClosedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundedTimePredicateAccess().getClosedWithinKeyword_0_0()); }
		(
			{ before(grammarAccess.getBoundedTimePredicateAccess().getClosedWithinKeyword_0_0()); }
			'within'
			{ after(grammarAccess.getBoundedTimePredicateAccess().getClosedWithinKeyword_0_0()); }
		)
		{ after(grammarAccess.getBoundedTimePredicateAccess().getClosedWithinKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__BoundAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundedTimePredicateAccess().getBoundTimeExpressionParserRuleCall_1_0()); }
		ruleTimeExpression
		{ after(grammarAccess.getBoundedTimePredicateAccess().getBoundTimeExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__OperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundedTimePredicateAccess().getOperatorTimePredicateOperatorEnumRuleCall_2_0()); }
		ruleTimePredicateOperator
		{ after(grammarAccess.getBoundedTimePredicateAccess().getOperatorTimePredicateOperatorEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedTimePredicate__BaseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundedTimePredicateAccess().getBaseExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getBoundedTimePredicateAccess().getBaseExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicTimePredicateAccess().getOperatorTimePredicateOperatorEnumRuleCall_1_0_0()); }
		ruleTimePredicateOperator
		{ after(grammarAccess.getPeriodicTimePredicateAccess().getOperatorTimePredicateOperatorEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__PeriodDateAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicTimePredicateAccess().getPeriodDateTimeConstantParserRuleCall_1_1_0()); }
		ruleTimeConstant
		{ after(grammarAccess.getPeriodicTimePredicateAccess().getPeriodDateTimeConstantParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__BaseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicTimePredicateAccess().getBaseTimeConstantParserRuleCall_3_0()); }
		ruleTimeConstant
		{ after(grammarAccess.getPeriodicTimePredicateAccess().getBaseTimeConstantParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__PeriodAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicTimePredicateAccess().getPeriodTimeExpressionParserRuleCall_4_0_1_0()); }
		ruleTimeExpression
		{ after(grammarAccess.getPeriodicTimePredicateAccess().getPeriodTimeExpressionParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__BasefromAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicTimePredicateAccess().getBasefromExpressionParserRuleCall_4_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPeriodicTimePredicateAccess().getBasefromExpressionParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodicTimePredicate__BasetoAssignment_4_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicTimePredicateAccess().getBasetoExpressionParserRuleCall_4_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getPeriodicTimePredicateAccess().getBasetoExpressionParserRuleCall_4_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnforcedTimeQuery__MultiplicityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEnforcedTimeQueryAccess().getMultiplicityActionMultiplicityEnumRuleCall_0_0()); }
		ruleActionMultiplicity
		{ after(grammarAccess.getActionEnforcedTimeQueryAccess().getMultiplicityActionMultiplicityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnforcedTimeQuery__PartyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEnforcedTimeQueryAccess().getPartyPartyCrossReference_1_0()); }
		(
			{ before(grammarAccess.getActionEnforcedTimeQueryAccess().getPartyPartyIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionEnforcedTimeQueryAccess().getPartyPartyIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getActionEnforcedTimeQueryAccess().getPartyPartyCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEnforcedTimeQuery__ActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEnforcedTimeQueryAccess().getActionActionCrossReference_3_0()); }
		(
			{ before(grammarAccess.getActionEnforcedTimeQueryAccess().getActionActionIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionEnforcedTimeQueryAccess().getActionActionIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getActionEnforcedTimeQueryAccess().getActionActionCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermValidTimeQuery__TermAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermValidTimeQueryAccess().getTermTermCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTermValidTimeQueryAccess().getTermTermIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTermValidTimeQueryAccess().getTermTermIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTermValidTimeQueryAccess().getTermTermCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalTimeQuery__OperatorAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalTimeQueryAccess().getOperatorTimeQueryOperatorEnumRuleCall_0()); }
		ruleTimeQueryOperator
		{ after(grammarAccess.getGlobalTimeQueryAccess().getOperatorTimeQueryOperatorEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLine__BaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeLineAccess().getBaseTimeLineChildParserRuleCall_0_0()); }
		ruleTimeLineChild
		{ after(grammarAccess.getTimeLineAccess().getBaseTimeLineChildParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLine__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeLineAccess().getOperatorTimeLineOperatorEnumRuleCall_1_0()); }
		ruleTimeLineOperator
		{ after(grammarAccess.getTimeLineAccess().getOperatorTimeLineOperatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLine__DeviationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeLineAccess().getDeviationTimeLineChildParserRuleCall_2_0()); }
		ruleTimeLineChild
		{ after(grammarAccess.getTimeLineAccess().getDeviationTimeLineChildParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__YearAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeConstantAccess().getYearINTTerminalRuleCall_1_0_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeConstantAccess().getYearINTTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__MonthAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeConstantAccess().getMonthINTTerminalRuleCall_2_0_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeConstantAccess().getMonthINTTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__DayAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeConstantAccess().getDayINTTerminalRuleCall_3_0_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeConstantAccess().getDayINTTerminalRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__HourAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeConstantAccess().getHourINTTerminalRuleCall_4_0_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeConstantAccess().getHourINTTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__MinAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeConstantAccess().getMinINTTerminalRuleCall_5_0_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeConstantAccess().getMinINTTerminalRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__SecAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeConstantAccess().getSecINTTerminalRuleCall_6_0_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeConstantAccess().getSecINTTerminalRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstant__DateAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeConstantAccess().getDateINTTerminalRuleCall_7_0_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeConstantAccess().getDateINTTerminalRuleCall_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeVarExpression__SlotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeVarExpressionAccess().getSlotDataSlotCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTimeVarExpressionAccess().getSlotDataSlotIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTimeVarExpressionAccess().getSlotDataSlotIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTimeVarExpressionAccess().getSlotDataSlotCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeVarExpression__NextAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeVarExpressionAccess().getNextSlotRefParserRuleCall_2_1_0()); }
		ruleSlotRef
		{ after(grammarAccess.getTimeVarExpressionAccess().getNextSlotRefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__TransitiveAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeThisExpressionAccess().getTransitiveTransitiveOperatorEnumRuleCall_3_1_0()); }
		ruleTransitiveOperator
		{ after(grammarAccess.getTimeThisExpressionAccess().getTransitiveTransitiveOperatorEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeThisExpression__NextAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeThisExpressionAccess().getNextSlotRefParserRuleCall_3_2_0()); }
		ruleSlotRef
		{ after(grammarAccess.getTimeThisExpressionAccess().getNextSlotRefParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SLD : 'i.e.,' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SL_COMMENT : ('@@'|'//') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_PLAINTEXT : '#' ('\\' .|~(('\\'|'#')))* '#';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
