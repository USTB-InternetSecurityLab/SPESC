/*
 * generated by Xtext 2.22.0
 */
package edu.ustb.sei.mde.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import edu.ustb.sei.mde.ide.contentassist.antlr.internal.InternalSmartContractSpecificationParser;
import edu.ustb.sei.mde.services.SmartContractSpecificationGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class SmartContractSpecificationParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(SmartContractSpecificationGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, SmartContractSpecificationGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPartyAccess().getAlternatives(), "rule__Party__Alternatives");
			builder.put(grammarAccess.getTermAccess().getAlternatives(), "rule__Term__Alternatives");
			builder.put(grammarAccess.getTransferOperationAccess().getAlternatives(), "rule__TransferOperation__Alternatives");
			builder.put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
			builder.put(grammarAccess.getOrExpressionAccess().getAlternatives_1_0_0_1(), "rule__OrExpression__Alternatives_1_0_0_1");
			builder.put(grammarAccess.getAndExpressionAccess().getAlternatives_1_0_0_1(), "rule__AndExpression__Alternatives_1_0_0_1");
			builder.put(grammarAccess.getAndExpressionChildAccess().getAlternatives(), "rule__AndExpressionChild__Alternatives");
			builder.put(grammarAccess.getAtomExpressionAccess().getAlternatives(), "rule__AtomExpression__Alternatives");
			builder.put(grammarAccess.getThisExpressionAccess().getAlternatives_1(), "rule__ThisExpression__Alternatives_1");
			builder.put(grammarAccess.getConstantExpressionAccess().getAlternatives(), "rule__ConstantExpression__Alternatives");
			builder.put(grammarAccess.getFloatAccess().getAlternatives_0(), "rule__Float__Alternatives_0");
			builder.put(grammarAccess.getFloatAccess().getAlternatives_1(), "rule__Float__Alternatives_1");
			builder.put(grammarAccess.getBooleanAccess().getAlternatives(), "rule__Boolean__Alternatives");
			builder.put(grammarAccess.getTimePredicateAccess().getAlternatives(), "rule__TimePredicate__Alternatives");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getAlternatives_4(), "rule__PeriodicTimePredicate__Alternatives_4");
			builder.put(grammarAccess.getTimeExpressionAccess().getAlternatives(), "rule__TimeExpression__Alternatives");
			builder.put(grammarAccess.getTimeQueryAccess().getAlternatives(), "rule__TimeQuery__Alternatives");
			builder.put(grammarAccess.getTimeLineChildAccess().getAlternatives(), "rule__TimeLineChild__Alternatives");
			builder.put(grammarAccess.getTimeThisExpressionAccess().getAlternatives_2(), "rule__TimeThisExpression__Alternatives_2");
			builder.put(grammarAccess.getQuantifierAccess().getAlternatives(), "rule__Quantifier__Alternatives");
			builder.put(grammarAccess.getRelationOperatorAccess().getAlternatives(), "rule__RelationOperator__Alternatives");
			builder.put(grammarAccess.getAdditiveOperatorAccess().getAlternatives(), "rule__AdditiveOperator__Alternatives");
			builder.put(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives(), "rule__MultiplicativeOperator__Alternatives");
			builder.put(grammarAccess.getTransitiveOperatorAccess().getAlternatives(), "rule__TransitiveOperator__Alternatives");
			builder.put(grammarAccess.getTimePredicateOperatorAccess().getAlternatives(), "rule__TimePredicateOperator__Alternatives");
			builder.put(grammarAccess.getActionMultiplicityAccess().getAlternatives(), "rule__ActionMultiplicity__Alternatives");
			builder.put(grammarAccess.getTimeLineOperatorAccess().getAlternatives(), "rule__TimeLineOperator__Alternatives");
			builder.put(grammarAccess.getTimeQueryOperatorAccess().getAlternatives(), "rule__TimeQueryOperator__Alternatives");
			builder.put(grammarAccess.getContractAccess().getGroup(), "rule__Contract__Group__0");
			builder.put(grammarAccess.getContractAccess().getGroup_5(), "rule__Contract__Group_5__0");
			builder.put(grammarAccess.getComplexTypeAccess().getGroup(), "rule__ComplexType__Group__0");
			builder.put(grammarAccess.getAssetAccess().getGroup(), "rule__Asset__Group__0");
			builder.put(grammarAccess.getEnumTypeAccess().getGroup(), "rule__EnumType__Group__0");
			builder.put(grammarAccess.getEnumTypeAccess().getGroup_4(), "rule__EnumType__Group_4__0");
			builder.put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
			builder.put(grammarAccess.getPartyAccess().getGroup_0(), "rule__Party__Group_0__0");
			builder.put(grammarAccess.getPartyAccess().getGroup_1(), "rule__Party__Group_1__0");
			builder.put(grammarAccess.getPartyAccess().getGroup_2(), "rule__Party__Group_2__0");
			builder.put(grammarAccess.getPartyAccess().getGroup_2_5(), "rule__Party__Group_2_5__0");
			builder.put(grammarAccess.getPartyAccess().getGroup_2_5_1(), "rule__Party__Group_2_5_1__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup_2(), "rule__Action__Group_2__0");
			builder.put(grammarAccess.getActionAccess().getGroup_2_1(), "rule__Action__Group_2_1__0");
			builder.put(grammarAccess.getActionAccess().getGroup_4(), "rule__Action__Group_4__0");
			builder.put(grammarAccess.getActionAccess().getGroup_6(), "rule__Action__Group_6__0");
			builder.put(grammarAccess.getTermAccess().getGroup_0(), "rule__Term__Group_0__0");
			builder.put(grammarAccess.getTermAccess().getGroup_0_10(), "rule__Term__Group_0_10__0");
			builder.put(grammarAccess.getTermAccess().getGroup_0_11(), "rule__Term__Group_0_11__0");
			builder.put(grammarAccess.getTermAccess().getGroup_0_12(), "rule__Term__Group_0_12__0");
			builder.put(grammarAccess.getTermAccess().getGroup_1(), "rule__Term__Group_1__0");
			builder.put(grammarAccess.getTermAccess().getGroup_1_10(), "rule__Term__Group_1_10__0");
			builder.put(grammarAccess.getTermAccess().getGroup_1_11(), "rule__Term__Group_1_11__0");
			builder.put(grammarAccess.getTermAccess().getGroup_1_12(), "rule__Term__Group_1_12__0");
			builder.put(grammarAccess.getTermAccess().getGroup_1_13(), "rule__Term__Group_1_13__0");
			builder.put(grammarAccess.getTransferOperationAccess().getGroup_0(), "rule__TransferOperation__Group_0__0");
			builder.put(grammarAccess.getTransferOperationAccess().getGroup_1(), "rule__TransferOperation__Group_1__0");
			builder.put(grammarAccess.getTransferOperationAccess().getGroup_2(), "rule__TransferOperation__Group_2__0");
			builder.put(grammarAccess.getMoneyExpressionAccess().getGroup(), "rule__MoneyExpression__Group__0");
			builder.put(grammarAccess.getCollectionSourceExpressionAccess().getGroup(), "rule__CollectionSourceExpression__Group__0");
			builder.put(grammarAccess.getCollectionSourceExpressionAccess().getGroup_1(), "rule__CollectionSourceExpression__Group_1__0");
			builder.put(grammarAccess.getCollectionSourceExpressionAccess().getGroup_1_0(), "rule__CollectionSourceExpression__Group_1_0__0");
			builder.put(grammarAccess.getCollectionSourceExpressionAccess().getGroup_1_0_0(), "rule__CollectionSourceExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getQuantifierExpressionAccess().getGroup(), "rule__QuantifierExpression__Group__0");
			builder.put(grammarAccess.getConditionalExpressionAccess().getGroup(), "rule__ConditionalExpression__Group__0");
			builder.put(grammarAccess.getImplyExpressionAccess().getGroup(), "rule__ImplyExpression__Group__0");
			builder.put(grammarAccess.getImplyExpressionAccess().getGroup_1(), "rule__ImplyExpression__Group_1__0");
			builder.put(grammarAccess.getImplyExpressionAccess().getGroup_1_0(), "rule__ImplyExpression__Group_1_0__0");
			builder.put(grammarAccess.getImplyExpressionAccess().getGroup_1_0_0(), "rule__ImplyExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup_1_0(), "rule__OrExpression__Group_1_0__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup_1_0_0(), "rule__OrExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup_1_0(), "rule__AndExpression__Group_1_0__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup_1_0_0(), "rule__AndExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getNotExpressionAccess().getGroup(), "rule__NotExpression__Group__0");
			builder.put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
			builder.put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
			builder.put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0(), "rule__RelationalExpression__Group_1_0__0");
			builder.put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0(), "rule__RelationalExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0(), "rule__AdditiveExpression__Group_1_0__0");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0(), "rule__AdditiveExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0(), "rule__MultiplicativeExpression__Group_1_0__0");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0(), "rule__MultiplicativeExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getAtomExpressionAccess().getGroup_9(), "rule__AtomExpression__Group_9__0");
			builder.put(grammarAccess.getThisExpressionAccess().getGroup(), "rule__ThisExpression__Group__0");
			builder.put(grammarAccess.getThisExpressionAccess().getGroup_1_0(), "rule__ThisExpression__Group_1_0__0");
			builder.put(grammarAccess.getThisExpressionAccess().getGroup_2(), "rule__ThisExpression__Group_2__0");
			builder.put(grammarAccess.getSlotRefAccess().getGroup(), "rule__SlotRef__Group__0");
			builder.put(grammarAccess.getSlotRefAccess().getGroup_1(), "rule__SlotRef__Group_1__0");
			builder.put(grammarAccess.getConstantExpressionAccess().getGroup_0(), "rule__ConstantExpression__Group_0__0");
			builder.put(grammarAccess.getConstantExpressionAccess().getGroup_1(), "rule__ConstantExpression__Group_1__0");
			builder.put(grammarAccess.getConstantExpressionAccess().getGroup_2(), "rule__ConstantExpression__Group_2__0");
			builder.put(grammarAccess.getConstantExpressionAccess().getGroup_3(), "rule__ConstantExpression__Group_3__0");
			builder.put(grammarAccess.getConstantExpressionAccess().getGroup_4(), "rule__ConstantExpression__Group_4__0");
			builder.put(grammarAccess.getFloatAccess().getGroup(), "rule__Float__Group__0");
			builder.put(grammarAccess.getFloatAccess().getGroup_1_0(), "rule__Float__Group_1_0__0");
			builder.put(grammarAccess.getFloatAccess().getGroup_1_1(), "rule__Float__Group_1_1__0");
			builder.put(grammarAccess.getIntegerAccess().getGroup(), "rule__Integer__Group__0");
			builder.put(grammarAccess.getSimpleTimePredicateAccess().getGroup(), "rule__SimpleTimePredicate__Group__0");
			builder.put(grammarAccess.getBoundedTimePredicateAccess().getGroup(), "rule__BoundedTimePredicate__Group__0");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getGroup(), "rule__PeriodicTimePredicate__Group__0");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getGroup_1(), "rule__PeriodicTimePredicate__Group_1__0");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getGroup_4_0(), "rule__PeriodicTimePredicate__Group_4_0__0");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getGroup_4_1(), "rule__PeriodicTimePredicate__Group_4_1__0");
			builder.put(grammarAccess.getActionEnforcedTimeQueryAccess().getGroup(), "rule__ActionEnforcedTimeQuery__Group__0");
			builder.put(grammarAccess.getTermValidTimeQueryAccess().getGroup(), "rule__TermValidTimeQuery__Group__0");
			builder.put(grammarAccess.getTimeLineAccess().getGroup(), "rule__TimeLine__Group__0");
			builder.put(grammarAccess.getTimeConstantAccess().getGroup(), "rule__TimeConstant__Group__0");
			builder.put(grammarAccess.getTimeConstantAccess().getGroup_1(), "rule__TimeConstant__Group_1__0");
			builder.put(grammarAccess.getTimeConstantAccess().getGroup_2(), "rule__TimeConstant__Group_2__0");
			builder.put(grammarAccess.getTimeConstantAccess().getGroup_3(), "rule__TimeConstant__Group_3__0");
			builder.put(grammarAccess.getTimeConstantAccess().getGroup_4(), "rule__TimeConstant__Group_4__0");
			builder.put(grammarAccess.getTimeConstantAccess().getGroup_5(), "rule__TimeConstant__Group_5__0");
			builder.put(grammarAccess.getTimeConstantAccess().getGroup_6(), "rule__TimeConstant__Group_6__0");
			builder.put(grammarAccess.getTimeConstantAccess().getGroup_7(), "rule__TimeConstant__Group_7__0");
			builder.put(grammarAccess.getTimeVarExpressionAccess().getGroup(), "rule__TimeVarExpression__Group__0");
			builder.put(grammarAccess.getTimeVarExpressionAccess().getGroup_2(), "rule__TimeVarExpression__Group_2__0");
			builder.put(grammarAccess.getTimeThisExpressionAccess().getGroup(), "rule__TimeThisExpression__Group__0");
			builder.put(grammarAccess.getTimeThisExpressionAccess().getGroup_2_0(), "rule__TimeThisExpression__Group_2_0__0");
			builder.put(grammarAccess.getTimeThisExpressionAccess().getGroup_3(), "rule__TimeThisExpression__Group_3__0");
			builder.put(grammarAccess.getContractAccess().getNameAssignment_1(), "rule__Contract__NameAssignment_1");
			builder.put(grammarAccess.getContractAccess().getPartiesAssignment_3(), "rule__Contract__PartiesAssignment_3");
			builder.put(grammarAccess.getContractAccess().getFieldsAssignment_4(), "rule__Contract__FieldsAssignment_4");
			builder.put(grammarAccess.getContractAccess().getTermsAssignment_5_0(), "rule__Contract__TermsAssignment_5_0");
			builder.put(grammarAccess.getContractAccess().getTypesAssignment_6(), "rule__Contract__TypesAssignment_6");
			builder.put(grammarAccess.getContractAccess().getAssetsAssignment_7(), "rule__Contract__AssetsAssignment_7");
			builder.put(grammarAccess.getComplexTypeAccess().getNameAssignment_1(), "rule__ComplexType__NameAssignment_1");
			builder.put(grammarAccess.getComplexTypeAccess().getFieldsAssignment_3(), "rule__ComplexType__FieldsAssignment_3");
			builder.put(grammarAccess.getAssetAccess().getNameAssignment_1(), "rule__Asset__NameAssignment_1");
			builder.put(grammarAccess.getAssetAccess().getFieldsAssignment_5(), "rule__Asset__FieldsAssignment_5");
			builder.put(grammarAccess.getAssetAccess().getFieldsAssignment_9(), "rule__Asset__FieldsAssignment_9");
			builder.put(grammarAccess.getEnumTypeAccess().getNameAssignment_1(), "rule__EnumType__NameAssignment_1");
			builder.put(grammarAccess.getEnumTypeAccess().getSelectionsAssignment_3(), "rule__EnumType__SelectionsAssignment_3");
			builder.put(grammarAccess.getEnumTypeAccess().getSelectionsAssignment_4_1(), "rule__EnumType__SelectionsAssignment_4_1");
			builder.put(grammarAccess.getSelectionAccess().getNameAssignment(), "rule__Selection__NameAssignment");
			builder.put(grammarAccess.getFieldAccess().getNameAssignment_0(), "rule__Field__NameAssignment_0");
			builder.put(grammarAccess.getFieldAccess().getManyAssignment_2(), "rule__Field__ManyAssignment_2");
			builder.put(grammarAccess.getFieldAccess().getTypeAssignment_3(), "rule__Field__TypeAssignment_3");
			builder.put(grammarAccess.getPartyAccess().getNameAssignment_0_2(), "rule__Party__NameAssignment_0_2");
			builder.put(grammarAccess.getPartyAccess().getFieldsAssignment_0_4(), "rule__Party__FieldsAssignment_0_4");
			builder.put(grammarAccess.getPartyAccess().getActionsAssignment_0_5(), "rule__Party__ActionsAssignment_0_5");
			builder.put(grammarAccess.getPartyAccess().getNameAssignment_1_3(), "rule__Party__NameAssignment_1_3");
			builder.put(grammarAccess.getPartyAccess().getFieldsAssignment_1_5(), "rule__Party__FieldsAssignment_1_5");
			builder.put(grammarAccess.getPartyAccess().getActionsAssignment_1_6(), "rule__Party__ActionsAssignment_1_6");
			builder.put(grammarAccess.getPartyAccess().getNameAssignment_2_3(), "rule__Party__NameAssignment_2_3");
			builder.put(grammarAccess.getPartyAccess().getActionsAssignment_2_5_0(), "rule__Party__ActionsAssignment_2_5_0");
			builder.put(grammarAccess.getPartyAccess().getActionsAssignment_2_5_1_1(), "rule__Party__ActionsAssignment_2_5_1_1");
			builder.put(grammarAccess.getActionAccess().getNameAssignment_0(), "rule__Action__NameAssignment_0");
			builder.put(grammarAccess.getActionAccess().getParametersAssignment_2_0(), "rule__Action__ParametersAssignment_2_0");
			builder.put(grammarAccess.getActionAccess().getParametersAssignment_2_1_1(), "rule__Action__ParametersAssignment_2_1_1");
			builder.put(grammarAccess.getActionAccess().getTypeAssignment_4_1(), "rule__Action__TypeAssignment_4_1");
			builder.put(grammarAccess.getActionAccess().getIsManyAssignment_6_0(), "rule__Action__IsManyAssignment_6_0");
			builder.put(grammarAccess.getActionAccess().getTimesAssignment_6_1(), "rule__Action__TimesAssignment_6_1");
			builder.put(grammarAccess.getTermAccess().getAutoAssignment_0_1(), "rule__Term__AutoAssignment_0_1");
			builder.put(grammarAccess.getTermAccess().getBreakAssignment_0_2(), "rule__Term__BreakAssignment_0_2");
			builder.put(grammarAccess.getTermAccess().getNameAssignment_0_4(), "rule__Term__NameAssignment_0_4");
			builder.put(grammarAccess.getTermAccess().getPartyAssignment_0_6(), "rule__Term__PartyAssignment_0_6");
			builder.put(grammarAccess.getTermAccess().getActionAssignment_0_8(), "rule__Term__ActionAssignment_0_8");
			builder.put(grammarAccess.getTermAccess().getConditionAssignment_0_10_1(), "rule__Term__ConditionAssignment_0_10_1");
			builder.put(grammarAccess.getTermAccess().getTransferOperationsAssignment_0_11_1(), "rule__Term__TransferOperationsAssignment_0_11_1");
			builder.put(grammarAccess.getTermAccess().getPostConditionAssignment_0_12_1(), "rule__Term__PostConditionAssignment_0_12_1");
			builder.put(grammarAccess.getTermAccess().getAutoAssignment_1_1(), "rule__Term__AutoAssignment_1_1");
			builder.put(grammarAccess.getTermAccess().getBreakAssignment_1_2(), "rule__Term__BreakAssignment_1_2");
			builder.put(grammarAccess.getTermAccess().getNameAssignment_1_4(), "rule__Term__NameAssignment_1_4");
			builder.put(grammarAccess.getTermAccess().getPartyAssignment_1_6(), "rule__Term__PartyAssignment_1_6");
			builder.put(grammarAccess.getTermAccess().getActionAssignment_1_8(), "rule__Term__ActionAssignment_1_8");
			builder.put(grammarAccess.getTermAccess().getConditionAssignment_1_10_1(), "rule__Term__ConditionAssignment_1_10_1");
			builder.put(grammarAccess.getTermAccess().getTransferOperationsAssignment_1_11_1(), "rule__Term__TransferOperationsAssignment_1_11_1");
			builder.put(grammarAccess.getTermAccess().getPostConditionAssignment_1_12_1(), "rule__Term__PostConditionAssignment_1_12_1");
			builder.put(grammarAccess.getTermAccess().getBreachOperationsAssignment_1_13_1(), "rule__Term__BreachOperationsAssignment_1_13_1");
			builder.put(grammarAccess.getTransferOperationAccess().getMoneyAssignment_0_2(), "rule__TransferOperation__MoneyAssignment_0_2");
			builder.put(grammarAccess.getTransferOperationAccess().getMoneyAssignment_1_2(), "rule__TransferOperation__MoneyAssignment_1_2");
			builder.put(grammarAccess.getTransferOperationAccess().getMoneyAssignment_2_2(), "rule__TransferOperation__MoneyAssignment_2_2");
			builder.put(grammarAccess.getTransferOperationAccess().getAccountAssignment_2_4(), "rule__TransferOperation__AccountAssignment_2_4");
			builder.put(grammarAccess.getMoneyExpressionAccess().getConditionAssignment_2(), "rule__MoneyExpression__ConditionAssignment_2");
			builder.put(grammarAccess.getDescriptiveExpressionAccess().getPlainTextAssignment(), "rule__DescriptiveExpression__PlainTextAssignment");
			builder.put(grammarAccess.getCollectionSourceExpressionAccess().getConditionAssignment_1_1(), "rule__CollectionSourceExpression__ConditionAssignment_1_1");
			builder.put(grammarAccess.getIteratorDeclExpressionAccess().getNameAssignment(), "rule__IteratorDeclExpression__NameAssignment");
			builder.put(grammarAccess.getQuantifierExpressionAccess().getQunatifierAssignment_0(), "rule__QuantifierExpression__QunatifierAssignment_0");
			builder.put(grammarAccess.getQuantifierExpressionAccess().getIteratorAssignment_1(), "rule__QuantifierExpression__IteratorAssignment_1");
			builder.put(grammarAccess.getQuantifierExpressionAccess().getScopeAssignment_3(), "rule__QuantifierExpression__ScopeAssignment_3");
			builder.put(grammarAccess.getQuantifierExpressionAccess().getConditionAssignment_6(), "rule__QuantifierExpression__ConditionAssignment_6");
			builder.put(grammarAccess.getConditionalExpressionAccess().getConditionAssignment_1(), "rule__ConditionalExpression__ConditionAssignment_1");
			builder.put(grammarAccess.getConditionalExpressionAccess().getThenBranchAssignment_3(), "rule__ConditionalExpression__ThenBranchAssignment_3");
			builder.put(grammarAccess.getConditionalExpressionAccess().getElseBranchAssignment_5(), "rule__ConditionalExpression__ElseBranchAssignment_5");
			builder.put(grammarAccess.getImplyExpressionAccess().getImpliedAssignment_1_1(), "rule__ImplyExpression__ImpliedAssignment_1_1");
			builder.put(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1(), "rule__OrExpression__RightAssignment_1_1");
			builder.put(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1(), "rule__AndExpression__RightAssignment_1_1");
			builder.put(grammarAccess.getNotExpressionAccess().getInnerAssignment_1(), "rule__NotExpression__InnerAssignment_1");
			builder.put(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__RelationalExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_1(), "rule__RelationalExpression__RightAssignment_1_1");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__AdditiveExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_1(), "rule__AdditiveExpression__RightAssignment_1_1");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__MultiplicativeExpression__OperatorAssignment_1_0_0_1");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_1(), "rule__MultiplicativeExpression__RightAssignment_1_1");
			builder.put(grammarAccess.getThisExpressionAccess().getTransitiveAssignment_2_1(), "rule__ThisExpression__TransitiveAssignment_2_1");
			builder.put(grammarAccess.getThisExpressionAccess().getNextAssignment_2_2(), "rule__ThisExpression__NextAssignment_2_2");
			builder.put(grammarAccess.getSlotRefAccess().getSlotAssignment_0(), "rule__SlotRef__SlotAssignment_0");
			builder.put(grammarAccess.getSlotRefAccess().getTransitiveAssignment_1_1(), "rule__SlotRef__TransitiveAssignment_1_1");
			builder.put(grammarAccess.getSlotRefAccess().getNextAssignment_1_2(), "rule__SlotRef__NextAssignment_1_2");
			builder.put(grammarAccess.getConstantExpressionAccess().getValueAssignment_0_1(), "rule__ConstantExpression__ValueAssignment_0_1");
			builder.put(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1(), "rule__ConstantExpression__ValueAssignment_1_1");
			builder.put(grammarAccess.getConstantExpressionAccess().getValueAssignment_2_1(), "rule__ConstantExpression__ValueAssignment_2_1");
			builder.put(grammarAccess.getConstantExpressionAccess().getValueAssignment_3_1(), "rule__ConstantExpression__ValueAssignment_3_1");
			builder.put(grammarAccess.getConstantExpressionAccess().getValueAssignment_4_1(), "rule__ConstantExpression__ValueAssignment_4_1");
			builder.put(grammarAccess.getSimpleTimePredicateAccess().getOperatorAssignment_0(), "rule__SimpleTimePredicate__OperatorAssignment_0");
			builder.put(grammarAccess.getSimpleTimePredicateAccess().getBaseAssignment_1(), "rule__SimpleTimePredicate__BaseAssignment_1");
			builder.put(grammarAccess.getBoundedTimePredicateAccess().getClosedAssignment_0(), "rule__BoundedTimePredicate__ClosedAssignment_0");
			builder.put(grammarAccess.getBoundedTimePredicateAccess().getBoundAssignment_1(), "rule__BoundedTimePredicate__BoundAssignment_1");
			builder.put(grammarAccess.getBoundedTimePredicateAccess().getOperatorAssignment_2(), "rule__BoundedTimePredicate__OperatorAssignment_2");
			builder.put(grammarAccess.getBoundedTimePredicateAccess().getBaseAssignment_3(), "rule__BoundedTimePredicate__BaseAssignment_3");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getOperatorAssignment_1_0(), "rule__PeriodicTimePredicate__OperatorAssignment_1_0");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getPeriodDateAssignment_1_1(), "rule__PeriodicTimePredicate__PeriodDateAssignment_1_1");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getBaseAssignment_3(), "rule__PeriodicTimePredicate__BaseAssignment_3");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getPeriodAssignment_4_0_1(), "rule__PeriodicTimePredicate__PeriodAssignment_4_0_1");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getBasefromAssignment_4_1_1(), "rule__PeriodicTimePredicate__BasefromAssignment_4_1_1");
			builder.put(grammarAccess.getPeriodicTimePredicateAccess().getBasetoAssignment_4_1_3(), "rule__PeriodicTimePredicate__BasetoAssignment_4_1_3");
			builder.put(grammarAccess.getActionEnforcedTimeQueryAccess().getMultiplicityAssignment_0(), "rule__ActionEnforcedTimeQuery__MultiplicityAssignment_0");
			builder.put(grammarAccess.getActionEnforcedTimeQueryAccess().getPartyAssignment_1(), "rule__ActionEnforcedTimeQuery__PartyAssignment_1");
			builder.put(grammarAccess.getActionEnforcedTimeQueryAccess().getActionAssignment_3(), "rule__ActionEnforcedTimeQuery__ActionAssignment_3");
			builder.put(grammarAccess.getTermValidTimeQueryAccess().getTermAssignment_0(), "rule__TermValidTimeQuery__TermAssignment_0");
			builder.put(grammarAccess.getGlobalTimeQueryAccess().getOperatorAssignment(), "rule__GlobalTimeQuery__OperatorAssignment");
			builder.put(grammarAccess.getTimeLineAccess().getBaseAssignment_0(), "rule__TimeLine__BaseAssignment_0");
			builder.put(grammarAccess.getTimeLineAccess().getOperatorAssignment_1(), "rule__TimeLine__OperatorAssignment_1");
			builder.put(grammarAccess.getTimeLineAccess().getDeviationAssignment_2(), "rule__TimeLine__DeviationAssignment_2");
			builder.put(grammarAccess.getTimeConstantAccess().getYearAssignment_1_0(), "rule__TimeConstant__YearAssignment_1_0");
			builder.put(grammarAccess.getTimeConstantAccess().getMonthAssignment_2_0(), "rule__TimeConstant__MonthAssignment_2_0");
			builder.put(grammarAccess.getTimeConstantAccess().getDayAssignment_3_0(), "rule__TimeConstant__DayAssignment_3_0");
			builder.put(grammarAccess.getTimeConstantAccess().getHourAssignment_4_0(), "rule__TimeConstant__HourAssignment_4_0");
			builder.put(grammarAccess.getTimeConstantAccess().getMinAssignment_5_0(), "rule__TimeConstant__MinAssignment_5_0");
			builder.put(grammarAccess.getTimeConstantAccess().getSecAssignment_6_0(), "rule__TimeConstant__SecAssignment_6_0");
			builder.put(grammarAccess.getTimeConstantAccess().getDateAssignment_7_0(), "rule__TimeConstant__DateAssignment_7_0");
			builder.put(grammarAccess.getTimeVarExpressionAccess().getSlotAssignment_1(), "rule__TimeVarExpression__SlotAssignment_1");
			builder.put(grammarAccess.getTimeVarExpressionAccess().getNextAssignment_2_1(), "rule__TimeVarExpression__NextAssignment_2_1");
			builder.put(grammarAccess.getTimeThisExpressionAccess().getTransitiveAssignment_3_1(), "rule__TimeThisExpression__TransitiveAssignment_3_1");
			builder.put(grammarAccess.getTimeThisExpressionAccess().getNextAssignment_3_2(), "rule__TimeThisExpression__NextAssignment_3_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private SmartContractSpecificationGrammarAccess grammarAccess;

	@Override
	protected InternalSmartContractSpecificationParser createParser() {
		InternalSmartContractSpecificationParser result = new InternalSmartContractSpecificationParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SmartContractSpecificationGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SmartContractSpecificationGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
