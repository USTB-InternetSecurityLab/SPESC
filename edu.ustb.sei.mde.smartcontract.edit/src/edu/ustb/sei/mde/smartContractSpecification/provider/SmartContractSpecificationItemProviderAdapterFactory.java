/**
 */
package edu.ustb.sei.mde.smartContractSpecification.provider;

import edu.ustb.sei.mde.smartContractSpecification.util.SmartContractSpecificationAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class SmartContractSpecificationItemProviderAdapterFactory extends SmartContractSpecificationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public SmartContractSpecificationItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.Contract} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContractItemProvider contractItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.Contract}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContractAdapter() {
		if (contractItemProvider == null) {
			contractItemProvider = new ContractItemProvider(this);
		}

		return contractItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.PrimitiveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveTypeItemProvider primitiveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.PrimitiveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveTypeAdapter() {
		if (primitiveTypeItemProvider == null) {
			primitiveTypeItemProvider = new PrimitiveTypeItemProvider(this);
		}

		return primitiveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.ComplexType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComplexTypeItemProvider complexTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.ComplexType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComplexTypeAdapter() {
		if (complexTypeItemProvider == null) {
			complexTypeItemProvider = new ComplexTypeItemProvider(this);
		}

		return complexTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.Asset} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssetItemProvider assetItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.Asset}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssetAdapter() {
		if (assetItemProvider == null) {
			assetItemProvider = new AssetItemProvider(this);
		}

		return assetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.Field} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FieldItemProvider fieldItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.Field}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFieldAdapter() {
		if (fieldItemProvider == null) {
			fieldItemProvider = new FieldItemProvider(this);
		}

		return fieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.Action} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionItemProvider actionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.Action}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionAdapter() {
		if (actionItemProvider == null) {
			actionItemProvider = new ActionItemProvider(this);
		}

		return actionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.SingleParty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SinglePartyItemProvider singlePartyItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.SingleParty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSinglePartyAdapter() {
		if (singlePartyItemProvider == null) {
			singlePartyItemProvider = new SinglePartyItemProvider(this);
		}

		return singlePartyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.GroupParty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupPartyItemProvider groupPartyItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.GroupParty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupPartyAdapter() {
		if (groupPartyItemProvider == null) {
			groupPartyItemProvider = new GroupPartyItemProvider(this);
		}

		return groupPartyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.ExternalParty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalPartyItemProvider externalPartyItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.ExternalParty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalPartyAdapter() {
		if (externalPartyItemProvider == null) {
			externalPartyItemProvider = new ExternalPartyItemProvider(this);
		}

		return externalPartyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.RightTerm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RightTermItemProvider rightTermItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.RightTerm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRightTermAdapter() {
		if (rightTermItemProvider == null) {
			rightTermItemProvider = new RightTermItemProvider(this);
		}

		return rightTermItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.DutyTerm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DutyTermItemProvider dutyTermItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.DutyTerm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDutyTermAdapter() {
		if (dutyTermItemProvider == null) {
			dutyTermItemProvider = new DutyTermItemProvider(this);
		}

		return dutyTermItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.BreachTerm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BreachTermItemProvider breachTermItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.BreachTerm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBreachTermAdapter() {
		if (breachTermItemProvider == null) {
			breachTermItemProvider = new BreachTermItemProvider(this);
		}

		return breachTermItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.DescriptiveExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptiveExpressionItemProvider descriptiveExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.DescriptiveExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptiveExpressionAdapter() {
		if (descriptiveExpressionItemProvider == null) {
			descriptiveExpressionItemProvider = new DescriptiveExpressionItemProvider(this);
		}

		return descriptiveExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.QuantifierExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QuantifierExpressionItemProvider quantifierExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.QuantifierExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQuantifierExpressionAdapter() {
		if (quantifierExpressionItemProvider == null) {
			quantifierExpressionItemProvider = new QuantifierExpressionItemProvider(this);
		}

		return quantifierExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.IteratorDeclExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IteratorDeclExpressionItemProvider iteratorDeclExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.IteratorDeclExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIteratorDeclExpressionAdapter() {
		if (iteratorDeclExpressionItemProvider == null) {
			iteratorDeclExpressionItemProvider = new IteratorDeclExpressionItemProvider(this);
		}

		return iteratorDeclExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.SelectExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectExpressionItemProvider selectExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.SelectExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectExpressionAdapter() {
		if (selectExpressionItemProvider == null) {
			selectExpressionItemProvider = new SelectExpressionItemProvider(this);
		}

		return selectExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.ConditionalExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionalExpressionItemProvider conditionalExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.ConditionalExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionalExpressionAdapter() {
		if (conditionalExpressionItemProvider == null) {
			conditionalExpressionItemProvider = new ConditionalExpressionItemProvider(this);
		}

		return conditionalExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.ImplyExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplyExpressionItemProvider implyExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.ImplyExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplyExpressionAdapter() {
		if (implyExpressionItemProvider == null) {
			implyExpressionItemProvider = new ImplyExpressionItemProvider(this);
		}

		return implyExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.AndExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AndExpressionItemProvider andExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.AndExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAndExpressionAdapter() {
		if (andExpressionItemProvider == null) {
			andExpressionItemProvider = new AndExpressionItemProvider(this);
		}

		return andExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.OrExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrExpressionItemProvider orExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.OrExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrExpressionAdapter() {
		if (orExpressionItemProvider == null) {
			orExpressionItemProvider = new OrExpressionItemProvider(this);
		}

		return orExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.NotExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotExpressionItemProvider notExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.NotExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotExpressionAdapter() {
		if (notExpressionItemProvider == null) {
			notExpressionItemProvider = new NotExpressionItemProvider(this);
		}

		return notExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.RelationalExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationalExpressionItemProvider relationalExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.RelationalExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationalExpressionAdapter() {
		if (relationalExpressionItemProvider == null) {
			relationalExpressionItemProvider = new RelationalExpressionItemProvider(this);
		}

		return relationalExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.TimePredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimePredicateItemProvider timePredicateItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.TimePredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimePredicateAdapter() {
		if (timePredicateItemProvider == null) {
			timePredicateItemProvider = new TimePredicateItemProvider(this);
		}

		return timePredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.BoundedTimePredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundedTimePredicateItemProvider boundedTimePredicateItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.BoundedTimePredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundedTimePredicateAdapter() {
		if (boundedTimePredicateItemProvider == null) {
			boundedTimePredicateItemProvider = new BoundedTimePredicateItemProvider(this);
		}

		return boundedTimePredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.TimeConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeConstantItemProvider timeConstantItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.TimeConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeConstantAdapter() {
		if (timeConstantItemProvider == null) {
			timeConstantItemProvider = new TimeConstantItemProvider(this);
		}

		return timeConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.TimeVarExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeVarExpressionItemProvider timeVarExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.TimeVarExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeVarExpressionAdapter() {
		if (timeVarExpressionItemProvider == null) {
			timeVarExpressionItemProvider = new TimeVarExpressionItemProvider(this);
		}

		return timeVarExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.ActionEnforcedTimeQuery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionEnforcedTimeQueryItemProvider actionEnforcedTimeQueryItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.ActionEnforcedTimeQuery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionEnforcedTimeQueryAdapter() {
		if (actionEnforcedTimeQueryItemProvider == null) {
			actionEnforcedTimeQueryItemProvider = new ActionEnforcedTimeQueryItemProvider(this);
		}

		return actionEnforcedTimeQueryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.TermValidTimeQuery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TermValidTimeQueryItemProvider termValidTimeQueryItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.TermValidTimeQuery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTermValidTimeQueryAdapter() {
		if (termValidTimeQueryItemProvider == null) {
			termValidTimeQueryItemProvider = new TermValidTimeQueryItemProvider(this);
		}

		return termValidTimeQueryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.GlobalTimeQuery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GlobalTimeQueryItemProvider globalTimeQueryItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.GlobalTimeQuery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGlobalTimeQueryAdapter() {
		if (globalTimeQueryItemProvider == null) {
			globalTimeQueryItemProvider = new GlobalTimeQueryItemProvider(this);
		}

		return globalTimeQueryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.AdditiveExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdditiveExpressionItemProvider additiveExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.AdditiveExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdditiveExpressionAdapter() {
		if (additiveExpressionItemProvider == null) {
			additiveExpressionItemProvider = new AdditiveExpressionItemProvider(this);
		}

		return additiveExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.MultiplicativeExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiplicativeExpressionItemProvider multiplicativeExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.MultiplicativeExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiplicativeExpressionAdapter() {
		if (multiplicativeExpressionItemProvider == null) {
			multiplicativeExpressionItemProvider = new MultiplicativeExpressionItemProvider(this);
		}

		return multiplicativeExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.FloatConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatConstantItemProvider floatConstantItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.FloatConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatConstantAdapter() {
		if (floatConstantItemProvider == null) {
			floatConstantItemProvider = new FloatConstantItemProvider(this);
		}

		return floatConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.StringConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringConstantItemProvider stringConstantItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.StringConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringConstantAdapter() {
		if (stringConstantItemProvider == null) {
			stringConstantItemProvider = new StringConstantItemProvider(this);
		}

		return stringConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.IntegerConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerConstantItemProvider integerConstantItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.IntegerConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerConstantAdapter() {
		if (integerConstantItemProvider == null) {
			integerConstantItemProvider = new IntegerConstantItemProvider(this);
		}

		return integerConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.Valueconstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueconstantItemProvider valueconstantItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.Valueconstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueconstantAdapter() {
		if (valueconstantItemProvider == null) {
			valueconstantItemProvider = new ValueconstantItemProvider(this);
		}

		return valueconstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.Booleanconstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanconstantItemProvider booleanconstantItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.Booleanconstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanconstantAdapter() {
		if (booleanconstantItemProvider == null) {
			booleanconstantItemProvider = new BooleanconstantItemProvider(this);
		}

		return booleanconstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.TypeLib} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeLibItemProvider typeLibItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.TypeLib}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeLibAdapter() {
		if (typeLibItemProvider == null) {
			typeLibItemProvider = new TypeLibItemProvider(this);
		}

		return typeLibItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.SlotRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SlotRefItemProvider slotRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.SlotRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSlotRefAdapter() {
		if (slotRefItemProvider == null) {
			slotRefItemProvider = new SlotRefItemProvider(this);
		}

		return slotRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.Deposit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DepositItemProvider depositItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.Deposit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDepositAdapter() {
		if (depositItemProvider == null) {
			depositItemProvider = new DepositItemProvider(this);
		}

		return depositItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.Withdraw} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WithdrawItemProvider withdrawItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.Withdraw}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWithdrawAdapter() {
		if (withdrawItemProvider == null) {
			withdrawItemProvider = new WithdrawItemProvider(this);
		}

		return withdrawItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.Transfer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransferItemProvider transferItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.Transfer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransferAdapter() {
		if (transferItemProvider == null) {
			transferItemProvider = new TransferItemProvider(this);
		}

		return transferItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.ThisExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThisExpressionItemProvider thisExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.ThisExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThisExpressionAdapter() {
		if (thisExpressionItemProvider == null) {
			thisExpressionItemProvider = new ThisExpressionItemProvider(this);
		}

		return thisExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.TimeLine} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeLineItemProvider timeLineItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.TimeLine}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeLineAdapter() {
		if (timeLineItemProvider == null) {
			timeLineItemProvider = new TimeLineItemProvider(this);
		}

		return timeLineItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.enumType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected enumTypeItemProvider enumTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.enumType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createenumTypeAdapter() {
		if (enumTypeItemProvider == null) {
			enumTypeItemProvider = new enumTypeItemProvider(this);
		}

		return enumTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.Selection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectionItemProvider selectionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.Selection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectionAdapter() {
		if (selectionItemProvider == null) {
			selectionItemProvider = new SelectionItemProvider(this);
		}

		return selectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.MoneyExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MoneyExpressionItemProvider moneyExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.MoneyExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMoneyExpressionAdapter() {
		if (moneyExpressionItemProvider == null) {
			moneyExpressionItemProvider = new MoneyExpressionItemProvider(this);
		}

		return moneyExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.RightExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RightExpressionItemProvider rightExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.RightExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRightExpressionAdapter() {
		if (rightExpressionItemProvider == null) {
			rightExpressionItemProvider = new RightExpressionItemProvider(this);
		}

		return rightExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.ustb.sei.mde.smartContractSpecification.PeriodicTimePredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PeriodicTimePredicateItemProvider periodicTimePredicateItemProvider;

	/**
	 * This creates an adapter for a {@link edu.ustb.sei.mde.smartContractSpecification.PeriodicTimePredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPeriodicTimePredicateAdapter() {
		if (periodicTimePredicateItemProvider == null) {
			periodicTimePredicateItemProvider = new PeriodicTimePredicateItemProvider(this);
		}

		return periodicTimePredicateItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (contractItemProvider != null) contractItemProvider.dispose();
		if (primitiveTypeItemProvider != null) primitiveTypeItemProvider.dispose();
		if (complexTypeItemProvider != null) complexTypeItemProvider.dispose();
		if (assetItemProvider != null) assetItemProvider.dispose();
		if (fieldItemProvider != null) fieldItemProvider.dispose();
		if (actionItemProvider != null) actionItemProvider.dispose();
		if (singlePartyItemProvider != null) singlePartyItemProvider.dispose();
		if (groupPartyItemProvider != null) groupPartyItemProvider.dispose();
		if (externalPartyItemProvider != null) externalPartyItemProvider.dispose();
		if (rightTermItemProvider != null) rightTermItemProvider.dispose();
		if (dutyTermItemProvider != null) dutyTermItemProvider.dispose();
		if (breachTermItemProvider != null) breachTermItemProvider.dispose();
		if (descriptiveExpressionItemProvider != null) descriptiveExpressionItemProvider.dispose();
		if (quantifierExpressionItemProvider != null) quantifierExpressionItemProvider.dispose();
		if (iteratorDeclExpressionItemProvider != null) iteratorDeclExpressionItemProvider.dispose();
		if (selectExpressionItemProvider != null) selectExpressionItemProvider.dispose();
		if (conditionalExpressionItemProvider != null) conditionalExpressionItemProvider.dispose();
		if (implyExpressionItemProvider != null) implyExpressionItemProvider.dispose();
		if (andExpressionItemProvider != null) andExpressionItemProvider.dispose();
		if (orExpressionItemProvider != null) orExpressionItemProvider.dispose();
		if (notExpressionItemProvider != null) notExpressionItemProvider.dispose();
		if (relationalExpressionItemProvider != null) relationalExpressionItemProvider.dispose();
		if (timePredicateItemProvider != null) timePredicateItemProvider.dispose();
		if (boundedTimePredicateItemProvider != null) boundedTimePredicateItemProvider.dispose();
		if (periodicTimePredicateItemProvider != null) periodicTimePredicateItemProvider.dispose();
		if (timeConstantItemProvider != null) timeConstantItemProvider.dispose();
		if (timeVarExpressionItemProvider != null) timeVarExpressionItemProvider.dispose();
		if (actionEnforcedTimeQueryItemProvider != null) actionEnforcedTimeQueryItemProvider.dispose();
		if (termValidTimeQueryItemProvider != null) termValidTimeQueryItemProvider.dispose();
		if (globalTimeQueryItemProvider != null) globalTimeQueryItemProvider.dispose();
		if (additiveExpressionItemProvider != null) additiveExpressionItemProvider.dispose();
		if (multiplicativeExpressionItemProvider != null) multiplicativeExpressionItemProvider.dispose();
		if (floatConstantItemProvider != null) floatConstantItemProvider.dispose();
		if (stringConstantItemProvider != null) stringConstantItemProvider.dispose();
		if (integerConstantItemProvider != null) integerConstantItemProvider.dispose();
		if (valueconstantItemProvider != null) valueconstantItemProvider.dispose();
		if (booleanconstantItemProvider != null) booleanconstantItemProvider.dispose();
		if (typeLibItemProvider != null) typeLibItemProvider.dispose();
		if (slotRefItemProvider != null) slotRefItemProvider.dispose();
		if (depositItemProvider != null) depositItemProvider.dispose();
		if (withdrawItemProvider != null) withdrawItemProvider.dispose();
		if (transferItemProvider != null) transferItemProvider.dispose();
		if (thisExpressionItemProvider != null) thisExpressionItemProvider.dispose();
		if (timeLineItemProvider != null) timeLineItemProvider.dispose();
		if (enumTypeItemProvider != null) enumTypeItemProvider.dispose();
		if (selectionItemProvider != null) selectionItemProvider.dispose();
		if (moneyExpressionItemProvider != null) moneyExpressionItemProvider.dispose();
		if (rightExpressionItemProvider != null) rightExpressionItemProvider.dispose();
	}

}
