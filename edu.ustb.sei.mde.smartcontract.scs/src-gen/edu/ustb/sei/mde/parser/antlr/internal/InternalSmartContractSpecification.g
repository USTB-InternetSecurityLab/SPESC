/*
 * generated by Xtext 2.22.0
 */
grammar InternalSmartContractSpecification;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package edu.ustb.sei.mde.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.ustb.sei.mde.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.ustb.sei.mde.services.SmartContractSpecificationGrammarAccess;

}

@parser::members {

 	private SmartContractSpecificationGrammarAccess grammarAccess;

    public InternalSmartContractSpecificationParser(TokenStream input, SmartContractSpecificationGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Contract";
   	}

   	@Override
   	protected SmartContractSpecificationGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleContract
entryRuleContract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContractRule()); }
	iv_ruleContract=ruleContract
	{ $current=$iv_ruleContract.current; }
	EOF;

// Rule Contract
ruleContract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='contract'
		{
			newLeafNode(otherlv_0, grammarAccess.getContractAccess().getContractKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContractRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContractAccess().getPartiesPartyParserRuleCall_3_0());
				}
				lv_parties_3_0=ruleParty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractRule());
					}
					add(
						$current,
						"parties",
						lv_parties_3_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Party");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getContractAccess().getFieldsFieldParserRuleCall_4_0());
				}
				lv_fields_4_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractRule());
					}
					add(
						$current,
						"fields",
						lv_fields_4_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getContractAccess().getTermsTermParserRuleCall_5_0_0());
					}
					lv_terms_5_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContractRule());
						}
						add(
							$current,
							"terms",
							lv_terms_5_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='.'
			{
				newLeafNode(otherlv_6, grammarAccess.getContractAccess().getFullStopKeyword_5_1());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getContractAccess().getTypesComplexTypeParserRuleCall_6_0());
				}
				lv_types_7_0=ruleComplexType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractRule());
					}
					add(
						$current,
						"types",
						lv_types_7_0,
						"edu.ustb.sei.mde.SmartContractSpecification.ComplexType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getContractAccess().getAssetsAssetParserRuleCall_7_0());
				}
				lv_assets_8_0=ruleAsset
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractRule());
					}
					add(
						$current,
						"assets",
						lv_assets_8_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Asset");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getContractAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleComplexType
entryRuleComplexType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexTypeRule()); }
	iv_ruleComplexType=ruleComplexType
	{ $current=$iv_ruleComplexType.current; }
	EOF;

// Rule ComplexType
ruleComplexType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='type'
		{
			newLeafNode(otherlv_0, grammarAccess.getComplexTypeAccess().getTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComplexTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComplexTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComplexTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexTypeAccess().getFieldsFieldParserRuleCall_3_0());
				}
				lv_fields_3_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexTypeRule());
					}
					add(
						$current,
						"fields",
						lv_fields_3_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getComplexTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAsset
entryRuleAsset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssetRule()); }
	iv_ruleAsset=ruleAsset
	{ $current=$iv_ruleAsset.current; }
	EOF;

// Rule Asset
ruleAsset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='asset'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssetAccess().getAssetKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAssetAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='info'
		{
			newLeafNode(otherlv_3, grammarAccess.getAssetAccess().getInfoKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssetAccess().getFieldsFieldParserRuleCall_5_0());
				}
				lv_fields_5_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssetRule());
					}
					add(
						$current,
						"fields",
						lv_fields_5_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_7='right'
		{
			newLeafNode(otherlv_7, grammarAccess.getAssetAccess().getRightKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getAssetAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssetAccess().getFieldsFieldParserRuleCall_9_0());
				}
				lv_fields_9_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssetRule());
					}
					add(
						$current,
						"fields",
						lv_fields_9_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_10());
		}
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getAssetAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleSelection
entryRuleSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionRule()); }
	iv_ruleSelection=ruleSelection
	{ $current=$iv_ruleSelection.current; }
	EOF;

// Rule Selection
ruleSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSelectionAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSelectionRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getColonKeyword_1());
		}
		(
			(
				lv_many_2_0='set'
				{
					newLeafNode(lv_many_2_0, grammarAccess.getFieldAccess().getManySetKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed($current, "many", lv_many_2_0 != null, "set");
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getFieldAccess().getTypeTypeCrossReference_3_0());
				}
			)
		)
		(
			this_SLD_4=RULE_SLD
			{
				newLeafNode(this_SLD_4, grammarAccess.getFieldAccess().getSLDTerminalRuleCall_4());
			}
		)?
	)
;

// Entry rule entryRuleParty
entryRuleParty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPartyRule()); }
	iv_ruleParty=ruleParty
	{ $current=$iv_ruleParty.current; }
	EOF;

// Rule Party
ruleParty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPartyAccess().getSinglePartyAction_0_0(),
						$current);
				}
			)
			otherlv_1='party'
			{
				newLeafNode(otherlv_1, grammarAccess.getPartyAccess().getPartyKeyword_0_1());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getPartyAccess().getNameIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPartyRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getPartyAccess().getLeftCurlyBracketKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPartyAccess().getFieldsFieldParserRuleCall_0_4_0());
					}
					lv_fields_4_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPartyRule());
						}
						add(
							$current,
							"fields",
							lv_fields_4_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_0_5_0());
					}
					lv_actions_5_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPartyRule());
						}
						add(
							$current,
							"actions",
							lv_actions_5_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getPartyAccess().getRightCurlyBracketKeyword_0_6());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPartyAccess().getGroupPartyAction_1_0(),
						$current);
				}
			)
			otherlv_8='party'
			{
				newLeafNode(otherlv_8, grammarAccess.getPartyAccess().getPartyKeyword_1_1());
			}
			otherlv_9='group'
			{
				newLeafNode(otherlv_9, grammarAccess.getPartyAccess().getGroupKeyword_1_2());
			}
			(
				(
					lv_name_10_0=RULE_ID
					{
						newLeafNode(lv_name_10_0, grammarAccess.getPartyAccess().getNameIDTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPartyRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_10_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getPartyAccess().getLeftCurlyBracketKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPartyAccess().getFieldsFieldParserRuleCall_1_5_0());
					}
					lv_fields_12_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPartyRule());
						}
						add(
							$current,
							"fields",
							lv_fields_12_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_1_6_0());
					}
					lv_actions_13_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPartyRule());
						}
						add(
							$current,
							"actions",
							lv_actions_13_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getPartyAccess().getRightCurlyBracketKeyword_1_7());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPartyAccess().getExternalPartyAction_2_0(),
						$current);
				}
			)
			otherlv_16='external'
			{
				newLeafNode(otherlv_16, grammarAccess.getPartyAccess().getExternalKeyword_2_1());
			}
			otherlv_17='party'
			{
				newLeafNode(otherlv_17, grammarAccess.getPartyAccess().getPartyKeyword_2_2());
			}
			(
				(
					lv_name_18_0=RULE_ID
					{
						newLeafNode(lv_name_18_0, grammarAccess.getPartyAccess().getNameIDTerminalRuleCall_2_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPartyRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_18_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_19='{'
			{
				newLeafNode(otherlv_19, grammarAccess.getPartyAccess().getLeftCurlyBracketKeyword_2_4());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_2_5_0_0());
						}
						lv_actions_20_0=ruleAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPartyRule());
							}
							add(
								$current,
								"actions",
								lv_actions_20_0,
								"edu.ustb.sei.mde.SmartContractSpecification.Action");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_21=','
					{
						newLeafNode(otherlv_21, grammarAccess.getPartyAccess().getCommaKeyword_2_5_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPartyAccess().getActionsActionParserRuleCall_2_5_1_1_0());
							}
							lv_actions_22_0=ruleAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPartyRule());
								}
								add(
									$current,
									"actions",
									lv_actions_22_0,
									"edu.ustb.sei.mde.SmartContractSpecification.Action");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_23='}'
			{
				newLeafNode(otherlv_23, grammarAccess.getPartyAccess().getRightCurlyBracketKeyword_2_6());
			}
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getActionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getParametersFieldParserRuleCall_2_0_0());
					}
					lv_parameters_2_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_2_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getActionAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActionAccess().getParametersFieldParserRuleCall_2_1_1_0());
						}
						lv_parameters_4_0=ruleField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActionRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_4_0,
								"edu.ustb.sei.mde.SmartContractSpecification.Field");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getActionAccess().getRightParenthesisKeyword_3());
		}
		(
			otherlv_6=':'
			{
				newLeafNode(otherlv_6, grammarAccess.getActionAccess().getColonKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getActionAccess().getTypeTypeCrossReference_4_1_0());
					}
				)
			)
		)?
		(
			this_SLD_8=RULE_SLD
			{
				newLeafNode(this_SLD_8, grammarAccess.getActionAccess().getSLDTerminalRuleCall_5());
			}
		)?
		(
			(
				(
					lv_IsMany_9_0='+'
					{
						newLeafNode(lv_IsMany_9_0, grammarAccess.getActionAccess().getIsManyPlusSignKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "IsMany", lv_IsMany_9_0 != null, "+");
					}
				)
			)
			(
				(
					lv_Times_10_0=RULE_INT
					{
						newLeafNode(lv_Times_10_0, grammarAccess.getActionAccess().getTimesINTTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed(
							$current,
							"Times",
							lv_Times_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)?
		)?
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTermAccess().getRightTermAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_auto_1_0='auto'
					{
						newLeafNode(lv_auto_1_0, grammarAccess.getTermAccess().getAutoAutoKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
						setWithLastConsumed($current, "auto", lv_auto_1_0 != null, "auto");
					}
				)
			)?
			(
				(
					lv_break_2_0='break'
					{
						newLeafNode(lv_break_2_0, grammarAccess.getTermAccess().getBreakBreakKeyword_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
						setWithLastConsumed($current, "break", lv_break_2_0 != null, "break");
					}
				)
			)?
			otherlv_3='term'
			{
				newLeafNode(otherlv_3, grammarAccess.getTermAccess().getTermKeyword_0_3());
			}
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getTermAccess().getNameIDTerminalRuleCall_0_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getTermAccess().getColonKeyword_0_5());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getTermAccess().getPartyPartyCrossReference_0_6_0());
					}
				)
			)
			otherlv_7='can'
			{
				newLeafNode(otherlv_7, grammarAccess.getTermAccess().getCanKeyword_0_7());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getTermAccess().getActionActionCrossReference_0_8_0());
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getTermAccess().getCommaKeyword_0_9());
				}
			)?
			(
				otherlv_10='when'
				{
					newLeafNode(otherlv_10, grammarAccess.getTermAccess().getWhenKeyword_0_10_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTermAccess().getConditionExpressionParserRuleCall_0_10_1_0());
						}
						lv_condition_11_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTermRule());
							}
							set(
								$current,
								"condition",
								lv_condition_11_0,
								"edu.ustb.sei.mde.SmartContractSpecification.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_12='while'
				{
					newLeafNode(otherlv_12, grammarAccess.getTermAccess().getWhileKeyword_0_11_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTermAccess().getTransferOperationsTransferOperationParserRuleCall_0_11_1_0());
						}
						lv_transferOperations_13_0=ruleTransferOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTermRule());
							}
							add(
								$current,
								"transferOperations",
								lv_transferOperations_13_0,
								"edu.ustb.sei.mde.SmartContractSpecification.TransferOperation");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)?
			(
				otherlv_14='where'
				{
					newLeafNode(otherlv_14, grammarAccess.getTermAccess().getWhereKeyword_0_12_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTermAccess().getPostConditionExpressionParserRuleCall_0_12_1_0());
						}
						lv_postCondition_15_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTermRule());
							}
							set(
								$current,
								"postCondition",
								lv_postCondition_15_0,
								"edu.ustb.sei.mde.SmartContractSpecification.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTermAccess().getDutyTermAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_auto_17_0='auto'
					{
						newLeafNode(lv_auto_17_0, grammarAccess.getTermAccess().getAutoAutoKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
						setWithLastConsumed($current, "auto", lv_auto_17_0 != null, "auto");
					}
				)
			)?
			(
				(
					lv_break_18_0='break'
					{
						newLeafNode(lv_break_18_0, grammarAccess.getTermAccess().getBreakBreakKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
						setWithLastConsumed($current, "break", lv_break_18_0 != null, "break");
					}
				)
			)?
			otherlv_19='term'
			{
				newLeafNode(otherlv_19, grammarAccess.getTermAccess().getTermKeyword_1_3());
			}
			(
				(
					lv_name_20_0=RULE_ID
					{
						newLeafNode(lv_name_20_0, grammarAccess.getTermAccess().getNameIDTerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_20_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_21=':'
			{
				newLeafNode(otherlv_21, grammarAccess.getTermAccess().getColonKeyword_1_5());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
					}
					otherlv_22=RULE_ID
					{
						newLeafNode(otherlv_22, grammarAccess.getTermAccess().getPartyPartyCrossReference_1_6_0());
					}
				)
			)
			otherlv_23='must'
			{
				newLeafNode(otherlv_23, grammarAccess.getTermAccess().getMustKeyword_1_7());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
					}
					otherlv_24=RULE_ID
					{
						newLeafNode(otherlv_24, grammarAccess.getTermAccess().getActionActionCrossReference_1_8_0());
					}
				)
			)
			(
				otherlv_25=','
				{
					newLeafNode(otherlv_25, grammarAccess.getTermAccess().getCommaKeyword_1_9());
				}
			)?
			(
				otherlv_26='when'
				{
					newLeafNode(otherlv_26, grammarAccess.getTermAccess().getWhenKeyword_1_10_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTermAccess().getConditionExpressionParserRuleCall_1_10_1_0());
						}
						lv_condition_27_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTermRule());
							}
							set(
								$current,
								"condition",
								lv_condition_27_0,
								"edu.ustb.sei.mde.SmartContractSpecification.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_28='while'
				{
					newLeafNode(otherlv_28, grammarAccess.getTermAccess().getWhileKeyword_1_11_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTermAccess().getTransferOperationsTransferOperationParserRuleCall_1_11_1_0());
						}
						lv_transferOperations_29_0=ruleTransferOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTermRule());
							}
							add(
								$current,
								"transferOperations",
								lv_transferOperations_29_0,
								"edu.ustb.sei.mde.SmartContractSpecification.TransferOperation");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)?
			(
				otherlv_30='where'
				{
					newLeafNode(otherlv_30, grammarAccess.getTermAccess().getWhereKeyword_1_12_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTermAccess().getPostConditionExpressionParserRuleCall_1_12_1_0());
						}
						lv_postCondition_31_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTermRule());
							}
							set(
								$current,
								"postCondition",
								lv_postCondition_31_0,
								"edu.ustb.sei.mde.SmartContractSpecification.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_32='breach'
				{
					newLeafNode(otherlv_32, grammarAccess.getTermAccess().getBreachKeyword_1_13_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTermAccess().getBreachOperationsTransferOperationParserRuleCall_1_13_1_0());
						}
						lv_breachOperations_33_0=ruleTransferOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTermRule());
							}
							add(
								$current,
								"breachOperations",
								lv_breachOperations_33_0,
								"edu.ustb.sei.mde.SmartContractSpecification.TransferOperation");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)?
		)
	)
;

// Entry rule entryRuleTransferOperation
entryRuleTransferOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransferOperationRule()); }
	iv_ruleTransferOperation=ruleTransferOperation
	{ $current=$iv_ruleTransferOperation.current; }
	EOF;

// Rule TransferOperation
ruleTransferOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTransferOperationAccess().getDepositAction_0_0(),
						$current);
				}
			)
			otherlv_1='deposit'
			{
				newLeafNode(otherlv_1, grammarAccess.getTransferOperationAccess().getDepositKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransferOperationAccess().getMoneyMoneyExpressionParserRuleCall_0_2_0());
					}
					lv_money_2_0=ruleMoneyExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransferOperationRule());
						}
						set(
							$current,
							"money",
							lv_money_2_0,
							"edu.ustb.sei.mde.SmartContractSpecification.MoneyExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTransferOperationAccess().getWithdrawAction_1_0(),
						$current);
				}
			)
			otherlv_4='withdraw'
			{
				newLeafNode(otherlv_4, grammarAccess.getTransferOperationAccess().getWithdrawKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransferOperationAccess().getMoneyMoneyExpressionParserRuleCall_1_2_0());
					}
					lv_money_5_0=ruleMoneyExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransferOperationRule());
						}
						set(
							$current,
							"money",
							lv_money_5_0,
							"edu.ustb.sei.mde.SmartContractSpecification.MoneyExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTransferOperationAccess().getTransferAction_2_0(),
						$current);
				}
			)
			otherlv_7='transfer'
			{
				newLeafNode(otherlv_7, grammarAccess.getTransferOperationAccess().getTransferKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransferOperationAccess().getMoneyMoneyExpressionParserRuleCall_2_2_0());
					}
					lv_money_8_0=ruleMoneyExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransferOperationRule());
						}
						set(
							$current,
							"money",
							lv_money_8_0,
							"edu.ustb.sei.mde.SmartContractSpecification.MoneyExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='to'
			{
				newLeafNode(otherlv_9, grammarAccess.getTransferOperationAccess().getToKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransferOperationAccess().getAccountExpressionParserRuleCall_2_4_0());
					}
					lv_account_10_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransferOperationRule());
						}
						set(
							$current,
							"account",
							lv_account_10_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMoneyExpression
entryRuleMoneyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoneyExpressionRule()); }
	iv_ruleMoneyExpression=ruleMoneyExpression
	{ $current=$iv_ruleMoneyExpression.current; }
	EOF;

// Rule MoneyExpression
ruleMoneyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMoneyExpressionAccess().getMoneyExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='$'
		{
			newLeafNode(otherlv_1, grammarAccess.getMoneyExpressionAccess().getDollarSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMoneyExpressionAccess().getConditionExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMoneyExpressionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall_0());
		}
		this_ConditionalExpression_0=ruleConditionalExpression
		{
			$current = $this_ConditionalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(ruleImplyExpression)=>
			{
				newCompositeNode(grammarAccess.getExpressionAccess().getImplyExpressionParserRuleCall_1());
			}
			this_ImplyExpression_1=ruleImplyExpression
			{
				$current = $this_ImplyExpression_1.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDescriptiveExpression
entryRuleDescriptiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescriptiveExpressionRule()); }
	iv_ruleDescriptiveExpression=ruleDescriptiveExpression
	{ $current=$iv_ruleDescriptiveExpression.current; }
	EOF;

// Rule DescriptiveExpression
ruleDescriptiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_plainText_0_0=RULE_PLAINTEXT
			{
				newLeafNode(lv_plainText_0_0, grammarAccess.getDescriptiveExpressionAccess().getPlainTextPLAINTEXTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDescriptiveExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"plainText",
					lv_plainText_0_0,
					"edu.ustb.sei.mde.SmartContractSpecification.PLAINTEXT");
			}
		)
	)
;

// Entry rule entryRuleCollectionSourceExpression
entryRuleCollectionSourceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionSourceExpressionRule()); }
	iv_ruleCollectionSourceExpression=ruleCollectionSourceExpression
	{ $current=$iv_ruleCollectionSourceExpression.current; }
	EOF;

// Rule CollectionSourceExpression
ruleCollectionSourceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCollectionSourceExpressionAccess().getSlotRefParserRuleCall_0());
		}
		this_SlotRef_0=ruleSlotRef
		{
			$current = $this_SlotRef_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					'where'
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCollectionSourceExpressionAccess().getSelectExpressionSourceAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='where'
					{
						newLeafNode(otherlv_2, grammarAccess.getCollectionSourceExpressionAccess().getWhereKeyword_1_0_0_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionSourceExpressionAccess().getConditionExpressionParserRuleCall_1_1_0());
					}
					lv_condition_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionSourceExpressionRule());
						}
						set(
							$current,
							"condition",
							lv_condition_3_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIteratorDeclExpression
entryRuleIteratorDeclExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIteratorDeclExpressionRule()); }
	iv_ruleIteratorDeclExpression=ruleIteratorDeclExpression
	{ $current=$iv_ruleIteratorDeclExpression.current; }
	EOF;

// Rule IteratorDeclExpression
ruleIteratorDeclExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getIteratorDeclExpressionAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIteratorDeclExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleQuantifierExpression
entryRuleQuantifierExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuantifierExpressionRule()); }
	iv_ruleQuantifierExpression=ruleQuantifierExpression
	{ $current=$iv_ruleQuantifierExpression.current; }
	EOF;

// Rule QuantifierExpression
ruleQuantifierExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantifierExpressionAccess().getQunatifierQuantifierEnumRuleCall_0_0());
				}
				lv_qunatifier_0_0=ruleQuantifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantifierExpressionRule());
					}
					set(
						$current,
						"qunatifier",
						lv_qunatifier_0_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Quantifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantifierExpressionAccess().getIteratorIteratorDeclExpressionParserRuleCall_1_0());
				}
				lv_iterator_1_0=ruleIteratorDeclExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantifierExpressionRule());
					}
					set(
						$current,
						"iterator",
						lv_iterator_1_0,
						"edu.ustb.sei.mde.SmartContractSpecification.IteratorDeclExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getQuantifierExpressionAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantifierExpressionAccess().getScopeCollectionSourceExpressionParserRuleCall_3_0());
				}
				lv_scope_3_0=ruleCollectionSourceExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantifierExpressionRule());
					}
					set(
						$current,
						"scope",
						lv_scope_3_0,
						"edu.ustb.sei.mde.SmartContractSpecification.CollectionSourceExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='such'
		{
			newLeafNode(otherlv_4, grammarAccess.getQuantifierExpressionAccess().getSuchKeyword_4());
		}
		otherlv_5='that'
		{
			newLeafNode(otherlv_5, grammarAccess.getQuantifierExpressionAccess().getThatKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantifierExpressionAccess().getConditionExpressionParserRuleCall_6_0());
				}
				lv_condition_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantifierExpressionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_6_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalExpressionRule()); }
	iv_ruleConditionalExpression=ruleConditionalExpression
	{ $current=$iv_ruleConditionalExpression.current; }
	EOF;

// Rule ConditionalExpression
ruleConditionalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionalExpressionAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalExpressionAccess().getConditionExpressionParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalExpressionAccess().getThenBranchExpressionParserRuleCall_3_0());
				}
				lv_thenBranch_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
					}
					set(
						$current,
						"thenBranch",
						lv_thenBranch_3_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='else'
		{
			newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getElseKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalExpressionAccess().getElseBranchExpressionParserRuleCall_5_0());
				}
				lv_elseBranch_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
					}
					set(
						$current,
						"elseBranch",
						lv_elseBranch_5_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImplyExpression
entryRuleImplyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplyExpressionRule()); }
	iv_ruleImplyExpression=ruleImplyExpression
	{ $current=$iv_ruleImplyExpression.current; }
	EOF;

// Rule ImplyExpression
ruleImplyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImplyExpressionAccess().getOrExpressionParserRuleCall_0());
		}
		this_OrExpression_0=ruleOrExpression
		{
			$current = $this_OrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					'implies'
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getImplyExpressionAccess().getImplyExpressionConditionAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='implies'
					{
						newLeafNode(otherlv_2, grammarAccess.getImplyExpressionAccess().getImpliesKeyword_1_0_0_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getImplyExpressionAccess().getImpliedExpressionParserRuleCall_1_1_0());
					}
					lv_implied_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImplyExpressionRule());
						}
						set(
							$current,
							"implied",
							lv_implied_3_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						'or'
						    |
						'||'
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						otherlv_2='or'
						{
							newLeafNode(otherlv_2, grammarAccess.getOrExpressionAccess().getOrKeyword_1_0_0_1_0());
						}
						    |
						otherlv_3='||'
						{
							newLeafNode(otherlv_3, grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_0_0_1_1());
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightOrExpressionParserRuleCall_1_1_0());
					}
					lv_right_4_0=ruleOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"edu.ustb.sei.mde.SmartContractSpecification.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getAndExpressionChildParserRuleCall_0());
		}
		this_AndExpressionChild_0=ruleAndExpressionChild
		{
			$current = $this_AndExpressionChild_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						'and'
						    |
						'&&'
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						otherlv_2='and'
						{
							newLeafNode(otherlv_2, grammarAccess.getAndExpressionAccess().getAndKeyword_1_0_0_1_0());
						}
						    |
						otherlv_3='&&'
						{
							newLeafNode(otherlv_3, grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_0_0_1_1());
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0());
					}
					lv_right_4_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"edu.ustb.sei.mde.SmartContractSpecification.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAndExpressionChild
entryRuleAndExpressionChild returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionChildRule()); }
	iv_ruleAndExpressionChild=ruleAndExpressionChild
	{ $current=$iv_ruleAndExpressionChild.current; }
	EOF;

// Rule AndExpressionChild
ruleAndExpressionChild returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionChildAccess().getNotExpressionParserRuleCall_0());
		}
		this_NotExpression_0=ruleNotExpression
		{
			$current = $this_NotExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAndExpressionChildAccess().getRelationalExpressionParserRuleCall_1());
		}
		this_RelationalExpression_1=ruleRelationalExpression
		{
			$current = $this_RelationalExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNotExpression
entryRuleNotExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotExpressionRule()); }
	iv_ruleNotExpression=ruleNotExpression
	{ $current=$iv_ruleNotExpression.current; }
	EOF;

// Rule NotExpression
ruleNotExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='not'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotExpressionAccess().getNotKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotExpressionAccess().getInnerRelationalExpressionParserRuleCall_1_0());
				}
				lv_inner_1_0=ruleRelationalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotExpressionRule());
					}
					set(
						$current,
						"inner",
						lv_inner_1_0,
						"edu.ustb.sei.mde.SmartContractSpecification.RelationalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	iv_ruleRelationalExpression=ruleRelationalExpression
	{ $current=$iv_ruleRelationalExpression.current; }
	EOF;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getArithmeticExpressionParserRuleCall_0());
		}
		this_ArithmeticExpression_0=ruleArithmeticExpression
		{
			$current = $this_ArithmeticExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleRelationOperator
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationOperatorEnumRuleCall_1_0_0_1_0());
							}
							lv_operator_2_0=ruleRelationOperator
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
								}
								set(
									$current,
									"operator",
									lv_operator_2_0,
									"edu.ustb.sei.mde.SmartContractSpecification.RelationOperator");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightArithmeticExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"edu.ustb.sei.mde.SmartContractSpecification.ArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticExpressionRule()); }
	iv_ruleArithmeticExpression=ruleArithmeticExpression
	{ $current=$iv_ruleArithmeticExpression.current; }
	EOF;

// Rule ArithmeticExpression
ruleArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getAdditiveExpressionParserRuleCall());
	}
	this_AdditiveExpression_0=ruleAdditiveExpression
	{
		$current = $this_AdditiveExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
		}
		this_MultiplicativeExpression_0=ruleMultiplicativeExpression
		{
			$current = $this_MultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleAdditiveOperator
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorEnumRuleCall_1_0_0_1_0());
							}
							lv_operator_2_0=ruleAdditiveOperator
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
								}
								set(
									$current,
									"operator",
									lv_operator_2_0,
									"edu.ustb.sei.mde.SmartContractSpecification.AdditiveOperator");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"edu.ustb.sei.mde.SmartContractSpecification.MultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getAtomExpressionParserRuleCall_0());
		}
		this_AtomExpression_0=ruleAtomExpression
		{
			$current = $this_AtomExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleMultiplicativeOperator
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorEnumRuleCall_1_0_0_1_0());
							}
							lv_operator_2_0=ruleMultiplicativeOperator
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
								}
								set(
									$current,
									"operator",
									lv_operator_2_0,
									"edu.ustb.sei.mde.SmartContractSpecification.MultiplicativeOperator");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightAtomExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleAtomExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"edu.ustb.sei.mde.SmartContractSpecification.AtomExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAtomExpression
entryRuleAtomExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomExpressionRule()); }
	iv_ruleAtomExpression=ruleAtomExpression
	{ $current=$iv_ruleAtomExpression.current; }
	EOF;

// Rule AtomExpression
ruleAtomExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleConstantExpression)=>
			{
				newCompositeNode(grammarAccess.getAtomExpressionAccess().getConstantExpressionParserRuleCall_0());
			}
			this_ConstantExpression_0=ruleConstantExpression
			{
				$current = $this_ConstantExpression_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getAtomExpressionAccess().getTimePredicateParserRuleCall_1());
		}
		this_TimePredicate_1=ruleTimePredicate
		{
			$current = $this_TimePredicate_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAtomExpressionAccess().getSlotRefParserRuleCall_2());
		}
		this_SlotRef_2=ruleSlotRef
		{
			$current = $this_SlotRef_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAtomExpressionAccess().getThisExpressionParserRuleCall_3());
		}
		this_ThisExpression_3=ruleThisExpression
		{
			$current = $this_ThisExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAtomExpressionAccess().getQuantifierExpressionParserRuleCall_4());
		}
		this_QuantifierExpression_4=ruleQuantifierExpression
		{
			$current = $this_QuantifierExpression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAtomExpressionAccess().getDescriptiveExpressionParserRuleCall_5());
		}
		this_DescriptiveExpression_5=ruleDescriptiveExpression
		{
			$current = $this_DescriptiveExpression_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAtomExpressionAccess().getGlobalTimeQueryParserRuleCall_6());
		}
		this_GlobalTimeQuery_6=ruleGlobalTimeQuery
		{
			$current = $this_GlobalTimeQuery_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAtomExpressionAccess().getTimeConstantParserRuleCall_7());
		}
		this_TimeConstant_7=ruleTimeConstant
		{
			$current = $this_TimeConstant_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAtomExpressionAccess().getTimeQueryParserRuleCall_8());
		}
		this_TimeQuery_8=ruleTimeQuery
		{
			$current = $this_TimeQuery_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_9='('
			{
				newLeafNode(otherlv_9, grammarAccess.getAtomExpressionAccess().getLeftParenthesisKeyword_9_0());
			}
			{
				newCompositeNode(grammarAccess.getAtomExpressionAccess().getExpressionParserRuleCall_9_1());
			}
			this_Expression_10=ruleExpression
			{
				$current = $this_Expression_10.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getAtomExpressionAccess().getRightParenthesisKeyword_9_2());
			}
		)
	)
;

// Entry rule entryRuleThisExpression
entryRuleThisExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThisExpressionRule()); }
	iv_ruleThisExpression=ruleThisExpression
	{ $current=$iv_ruleThisExpression.current; }
	EOF;

// Rule ThisExpression
ruleThisExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getThisExpressionAccess().getThisExpressionAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='this'
				{
					newLeafNode(otherlv_1, grammarAccess.getThisExpressionAccess().getThisKeyword_1_0_0());
				}
				(
					this_ID_2=RULE_ID
					{
						newLeafNode(this_ID_2, grammarAccess.getThisExpressionAccess().getIDTerminalRuleCall_1_0_1());
					}
				)?
			)
			    |
			otherlv_3='he'
			{
				newLeafNode(otherlv_3, grammarAccess.getThisExpressionAccess().getHeKeyword_1_1());
			}
			    |
			otherlv_4='she'
			{
				newLeafNode(otherlv_4, grammarAccess.getThisExpressionAccess().getSheKeyword_1_2());
			}
			    |
			otherlv_5='his'
			{
				newLeafNode(otherlv_5, grammarAccess.getThisExpressionAccess().getHisKeyword_1_3());
			}
			    |
			otherlv_6='her'
			{
				newLeafNode(otherlv_6, grammarAccess.getThisExpressionAccess().getHerKeyword_1_4());
			}
			    |
			otherlv_7='himself'
			{
				newLeafNode(otherlv_7, grammarAccess.getThisExpressionAccess().getHimselfKeyword_1_5());
			}
			    |
			otherlv_8='herself'
			{
				newLeafNode(otherlv_8, grammarAccess.getThisExpressionAccess().getHerselfKeyword_1_6());
			}
		)
		(
			otherlv_9='::'
			{
				newLeafNode(otherlv_9, grammarAccess.getThisExpressionAccess().getColonColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getThisExpressionAccess().getTransitiveTransitiveOperatorEnumRuleCall_2_1_0());
					}
					lv_transitive_10_0=ruleTransitiveOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getThisExpressionRule());
						}
						set(
							$current,
							"transitive",
							lv_transitive_10_0,
							"edu.ustb.sei.mde.SmartContractSpecification.TransitiveOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getThisExpressionAccess().getNextSlotRefParserRuleCall_2_2_0());
					}
					lv_next_11_0=ruleSlotRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getThisExpressionRule());
						}
						set(
							$current,
							"next",
							lv_next_11_0,
							"edu.ustb.sei.mde.SmartContractSpecification.SlotRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSlotRef
entryRuleSlotRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSlotRefRule()); }
	iv_ruleSlotRef=ruleSlotRef
	{ $current=$iv_ruleSlotRef.current; }
	EOF;

// Rule SlotRef
ruleSlotRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSlotRefRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSlotRefAccess().getSlotDataSlotCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='::'
			{
				newLeafNode(otherlv_1, grammarAccess.getSlotRefAccess().getColonColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSlotRefAccess().getTransitiveTransitiveOperatorEnumRuleCall_1_1_0());
					}
					lv_transitive_2_0=ruleTransitiveOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSlotRefRule());
						}
						set(
							$current,
							"transitive",
							lv_transitive_2_0,
							"edu.ustb.sei.mde.SmartContractSpecification.TransitiveOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getSlotRefAccess().getNextSlotRefParserRuleCall_1_2_0());
					}
					lv_next_3_0=ruleSlotRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSlotRefRule());
						}
						set(
							$current,
							"next",
							lv_next_3_0,
							"edu.ustb.sei.mde.SmartContractSpecification.SlotRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantExpressionRule()); }
	iv_ruleConstantExpression=ruleConstantExpression
	{ $current=$iv_ruleConstantExpression.current; }
	EOF;

// Rule ConstantExpression
ruleConstantExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstantExpressionAccess().getIntegerConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConstantExpressionAccess().getValueIntegerParserRuleCall_0_1_0());
					}
					lv_value_1_0=ruleInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstantExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_1_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Integer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstantExpressionAccess().getStringConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getConstantExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstantExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstantExpressionAccess().getBooleanconstantAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConstantExpressionAccess().getValueBooleanParserRuleCall_2_1_0());
					}
					lv_value_5_0=ruleBoolean
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstantExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Boolean");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstantExpressionAccess().getFloatConstantAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConstantExpressionAccess().getValueFloatParserRuleCall_3_1_0());
					}
					lv_value_7_0=ruleFloat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstantExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_7_0,
							"edu.ustb.sei.mde.SmartContractSpecification.Float");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstantExpressionAccess().getValueconstantAction_4_0(),
						$current);
				}
			)
			(
				(
					lv_value_9_0='value'
					{
						newLeafNode(lv_value_9_0, grammarAccess.getConstantExpressionAccess().getValueValueKeyword_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstantExpressionRule());
						}
						setWithLastConsumed($current, "value", lv_value_9_0, "value");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFloat
entryRuleFloat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloatRule()); }
	iv_ruleFloat=ruleFloat
	{ $current=$iv_ruleFloat.current.getText(); }
	EOF;

// Rule Float
ruleFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='+'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFloatAccess().getPlusSignKeyword_0_0());
			}
			    |
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFloatAccess().getHyphenMinusKeyword_0_1());
			}
		)?
		(
			(
				this_INT_2=RULE_INT
				{
					$current.merge(this_INT_2);
				}
				{
					newLeafNode(this_INT_2, grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_0_0());
				}
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFloatAccess().getFullStopKeyword_1_0_1());
				}
				(
					this_INT_4=RULE_INT
					{
						$current.merge(this_INT_4);
					}
					{
						newLeafNode(this_INT_4, grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_0_2());
					}
				)?
			)
			    |
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFloatAccess().getFullStopKeyword_1_1_0());
				}
				this_INT_6=RULE_INT
				{
					$current.merge(this_INT_6);
				}
				{
					newLeafNode(this_INT_6, grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_1_1());
				}
			)
		)
	)
;

// Entry rule entryRuleInteger
entryRuleInteger returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntegerRule()); }
	iv_ruleInteger=ruleInteger
	{ $current=$iv_ruleInteger.current.getText(); }
	EOF;

// Rule Integer
ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleBoolean
entryRuleBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanRule()); }
	iv_ruleBoolean=ruleBoolean
	{ $current=$iv_ruleBoolean.current.getText(); }
	EOF;

// Rule Boolean
ruleBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleTimePredicate
entryRuleTimePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimePredicateRule()); }
	iv_ruleTimePredicate=ruleTimePredicate
	{ $current=$iv_ruleTimePredicate.current; }
	EOF;

// Rule TimePredicate
ruleTimePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTimePredicateAccess().getSimpleTimePredicateParserRuleCall_0());
		}
		this_SimpleTimePredicate_0=ruleSimpleTimePredicate
		{
			$current = $this_SimpleTimePredicate_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(ruleBoundedTimePredicate)=>
			{
				newCompositeNode(grammarAccess.getTimePredicateAccess().getBoundedTimePredicateParserRuleCall_1());
			}
			this_BoundedTimePredicate_1=ruleBoundedTimePredicate
			{
				$current = $this_BoundedTimePredicate_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(rulePeriodicTimePredicate)=>
			{
				newCompositeNode(grammarAccess.getTimePredicateAccess().getPeriodicTimePredicateParserRuleCall_2());
			}
			this_PeriodicTimePredicate_2=rulePeriodicTimePredicate
			{
				$current = $this_PeriodicTimePredicate_2.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSimpleTimePredicate
entryRuleSimpleTimePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleTimePredicateRule()); }
	iv_ruleSimpleTimePredicate=ruleSimpleTimePredicate
	{ $current=$iv_ruleSimpleTimePredicate.current; }
	EOF;

// Rule SimpleTimePredicate
ruleSimpleTimePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleTimePredicateAccess().getOperatorTimePredicateOperatorEnumRuleCall_0_0());
				}
				lv_operator_0_0=ruleTimePredicateOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleTimePredicateRule());
					}
					set(
						$current,
						"operator",
						lv_operator_0_0,
						"edu.ustb.sei.mde.SmartContractSpecification.TimePredicateOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleTimePredicateAccess().getBaseExpressionParserRuleCall_1_0());
				}
				lv_base_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleTimePredicateRule());
					}
					set(
						$current,
						"base",
						lv_base_1_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBoundedTimePredicate
entryRuleBoundedTimePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoundedTimePredicateRule()); }
	iv_ruleBoundedTimePredicate=ruleBoundedTimePredicate
	{ $current=$iv_ruleBoundedTimePredicate.current; }
	EOF;

// Rule BoundedTimePredicate
ruleBoundedTimePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_closed_0_0='within'
				{
					newLeafNode(lv_closed_0_0, grammarAccess.getBoundedTimePredicateAccess().getClosedWithinKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoundedTimePredicateRule());
					}
					setWithLastConsumed($current, "closed", lv_closed_0_0 != null, "within");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBoundedTimePredicateAccess().getBoundTimeExpressionParserRuleCall_1_0());
				}
				lv_bound_1_0=ruleTimeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoundedTimePredicateRule());
					}
					set(
						$current,
						"bound",
						lv_bound_1_0,
						"edu.ustb.sei.mde.SmartContractSpecification.TimeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBoundedTimePredicateAccess().getOperatorTimePredicateOperatorEnumRuleCall_2_0());
				}
				lv_operator_2_0=ruleTimePredicateOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoundedTimePredicateRule());
					}
					set(
						$current,
						"operator",
						lv_operator_2_0,
						"edu.ustb.sei.mde.SmartContractSpecification.TimePredicateOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBoundedTimePredicateAccess().getBaseExpressionParserRuleCall_3_0());
				}
				lv_base_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoundedTimePredicateRule());
					}
					set(
						$current,
						"base",
						lv_base_3_0,
						"edu.ustb.sei.mde.SmartContractSpecification.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePeriodicTimePredicate
entryRulePeriodicTimePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPeriodicTimePredicateRule()); }
	iv_rulePeriodicTimePredicate=rulePeriodicTimePredicate
	{ $current=$iv_rulePeriodicTimePredicate.current; }
	EOF;

// Rule PeriodicTimePredicate
rulePeriodicTimePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='by'
		{
			newLeafNode(otherlv_0, grammarAccess.getPeriodicTimePredicateAccess().getByKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPeriodicTimePredicateAccess().getOperatorTimePredicateOperatorEnumRuleCall_1_0_0());
					}
					lv_operator_1_0=ruleTimePredicateOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPeriodicTimePredicateRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"edu.ustb.sei.mde.SmartContractSpecification.TimePredicateOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPeriodicTimePredicateAccess().getPeriodDateTimeConstantParserRuleCall_1_1_0());
					}
					lv_periodDate_2_0=ruleTimeConstant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPeriodicTimePredicateRule());
						}
						set(
							$current,
							"periodDate",
							lv_periodDate_2_0,
							"edu.ustb.sei.mde.SmartContractSpecification.TimeConstant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='every'
		{
			newLeafNode(otherlv_3, grammarAccess.getPeriodicTimePredicateAccess().getEveryKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodicTimePredicateAccess().getBaseTimeConstantParserRuleCall_3_0());
				}
				lv_base_4_0=ruleTimeConstant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodicTimePredicateRule());
					}
					set(
						$current,
						"base",
						lv_base_4_0,
						"edu.ustb.sei.mde.SmartContractSpecification.TimeConstant");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_5='in'
				{
					newLeafNode(otherlv_5, grammarAccess.getPeriodicTimePredicateAccess().getInKeyword_4_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPeriodicTimePredicateAccess().getPeriodTimeExpressionParserRuleCall_4_0_1_0());
						}
						lv_period_6_0=ruleTimeExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPeriodicTimePredicateRule());
							}
							set(
								$current,
								"period",
								lv_period_6_0,
								"edu.ustb.sei.mde.SmartContractSpecification.TimeExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_7='from'
				{
					newLeafNode(otherlv_7, grammarAccess.getPeriodicTimePredicateAccess().getFromKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPeriodicTimePredicateAccess().getBasefromExpressionParserRuleCall_4_1_1_0());
						}
						lv_basefrom_8_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPeriodicTimePredicateRule());
							}
							set(
								$current,
								"basefrom",
								lv_basefrom_8_0,
								"edu.ustb.sei.mde.SmartContractSpecification.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9='to'
				{
					newLeafNode(otherlv_9, grammarAccess.getPeriodicTimePredicateAccess().getToKeyword_4_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPeriodicTimePredicateAccess().getBasetoExpressionParserRuleCall_4_1_3_0());
						}
						lv_baseto_10_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPeriodicTimePredicateRule());
							}
							set(
								$current,
								"baseto",
								lv_baseto_10_0,
								"edu.ustb.sei.mde.SmartContractSpecification.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleTimeExpression
entryRuleTimeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeExpressionRule()); }
	iv_ruleTimeExpression=ruleTimeExpression
	{ $current=$iv_ruleTimeExpression.current; }
	EOF;

// Rule TimeExpression
ruleTimeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleTimeLine)=>
			{
				newCompositeNode(grammarAccess.getTimeExpressionAccess().getTimeLineParserRuleCall_0());
			}
			this_TimeLine_0=ruleTimeLine
			{
				$current = $this_TimeLine_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getTimeExpressionAccess().getTimeConstantParserRuleCall_1());
		}
		this_TimeConstant_1=ruleTimeConstant
		{
			$current = $this_TimeConstant_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTimeExpressionAccess().getTimeQueryParserRuleCall_2());
		}
		this_TimeQuery_2=ruleTimeQuery
		{
			$current = $this_TimeQuery_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTimeExpressionAccess().getTimeVarExpressionParserRuleCall_3());
		}
		this_TimeVarExpression_3=ruleTimeVarExpression
		{
			$current = $this_TimeVarExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTimeExpressionAccess().getTimeThisExpressionParserRuleCall_4());
		}
		this_TimeThisExpression_4=ruleTimeThisExpression
		{
			$current = $this_TimeThisExpression_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTimeQuery
entryRuleTimeQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeQueryRule()); }
	iv_ruleTimeQuery=ruleTimeQuery
	{ $current=$iv_ruleTimeQuery.current; }
	EOF;

// Rule TimeQuery
ruleTimeQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTimeQueryAccess().getActionEnforcedTimeQueryParserRuleCall_0());
		}
		this_ActionEnforcedTimeQuery_0=ruleActionEnforcedTimeQuery
		{
			$current = $this_ActionEnforcedTimeQuery_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTimeQueryAccess().getTermValidTimeQueryParserRuleCall_1());
		}
		this_TermValidTimeQuery_1=ruleTermValidTimeQuery
		{
			$current = $this_TermValidTimeQuery_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTimeQueryAccess().getGlobalTimeQueryParserRuleCall_2());
		}
		this_GlobalTimeQuery_2=ruleGlobalTimeQuery
		{
			$current = $this_GlobalTimeQuery_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleActionEnforcedTimeQuery
entryRuleActionEnforcedTimeQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionEnforcedTimeQueryRule()); }
	iv_ruleActionEnforcedTimeQuery=ruleActionEnforcedTimeQuery
	{ $current=$iv_ruleActionEnforcedTimeQuery.current; }
	EOF;

// Rule ActionEnforcedTimeQuery
ruleActionEnforcedTimeQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActionEnforcedTimeQueryAccess().getMultiplicityActionMultiplicityEnumRuleCall_0_0());
				}
				lv_multiplicity_0_0=ruleActionMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionEnforcedTimeQueryRule());
					}
					set(
						$current,
						"multiplicity",
						lv_multiplicity_0_0,
						"edu.ustb.sei.mde.SmartContractSpecification.ActionMultiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionEnforcedTimeQueryRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getActionEnforcedTimeQueryAccess().getPartyPartyCrossReference_1_0());
				}
			)
		)
		otherlv_2='did'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionEnforcedTimeQueryAccess().getDidKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionEnforcedTimeQueryRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getActionEnforcedTimeQueryAccess().getActionActionCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleTermValidTimeQuery
entryRuleTermValidTimeQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermValidTimeQueryRule()); }
	iv_ruleTermValidTimeQuery=ruleTermValidTimeQuery
	{ $current=$iv_ruleTermValidTimeQuery.current; }
	EOF;

// Rule TermValidTimeQuery
ruleTermValidTimeQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTermValidTimeQueryRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getTermValidTimeQueryAccess().getTermTermCrossReference_0_0());
				}
			)
		)
		otherlv_1='is'
		{
			newLeafNode(otherlv_1, grammarAccess.getTermValidTimeQueryAccess().getIsKeyword_1());
		}
		otherlv_2='valid'
		{
			newLeafNode(otherlv_2, grammarAccess.getTermValidTimeQueryAccess().getValidKeyword_2());
		}
	)
;

// Entry rule entryRuleGlobalTimeQuery
entryRuleGlobalTimeQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobalTimeQueryRule()); }
	iv_ruleGlobalTimeQuery=ruleGlobalTimeQuery
	{ $current=$iv_ruleGlobalTimeQuery.current; }
	EOF;

// Rule GlobalTimeQuery
ruleGlobalTimeQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getGlobalTimeQueryAccess().getOperatorTimeQueryOperatorEnumRuleCall_0());
			}
			lv_operator_0_0=ruleTimeQueryOperator
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getGlobalTimeQueryRule());
				}
				set(
					$current,
					"operator",
					lv_operator_0_0,
					"edu.ustb.sei.mde.SmartContractSpecification.TimeQueryOperator");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTimeLine
entryRuleTimeLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeLineRule()); }
	iv_ruleTimeLine=ruleTimeLine
	{ $current=$iv_ruleTimeLine.current; }
	EOF;

// Rule TimeLine
ruleTimeLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeLineAccess().getBaseTimeLineChildParserRuleCall_0_0());
				}
				lv_base_0_0=ruleTimeLineChild
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeLineRule());
					}
					set(
						$current,
						"base",
						lv_base_0_0,
						"edu.ustb.sei.mde.SmartContractSpecification.TimeLineChild");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeLineAccess().getOperatorTimeLineOperatorEnumRuleCall_1_0());
				}
				lv_operator_1_0=ruleTimeLineOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeLineRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"edu.ustb.sei.mde.SmartContractSpecification.TimeLineOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeLineAccess().getDeviationTimeLineChildParserRuleCall_2_0());
				}
				lv_deviation_2_0=ruleTimeLineChild
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeLineRule());
					}
					set(
						$current,
						"deviation",
						lv_deviation_2_0,
						"edu.ustb.sei.mde.SmartContractSpecification.TimeLineChild");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTimeLineChild
entryRuleTimeLineChild returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeLineChildRule()); }
	iv_ruleTimeLineChild=ruleTimeLineChild
	{ $current=$iv_ruleTimeLineChild.current; }
	EOF;

// Rule TimeLineChild
ruleTimeLineChild returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTimeLineChildAccess().getTimeConstantParserRuleCall_0());
		}
		this_TimeConstant_0=ruleTimeConstant
		{
			$current = $this_TimeConstant_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTimeLineChildAccess().getTimeQueryParserRuleCall_1());
		}
		this_TimeQuery_1=ruleTimeQuery
		{
			$current = $this_TimeQuery_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTimeConstant
entryRuleTimeConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeConstantRule()); }
	iv_ruleTimeConstant=ruleTimeConstant
	{ $current=$iv_ruleTimeConstant.current; }
	EOF;

// Rule TimeConstant
ruleTimeConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTimeConstantAccess().getTimeConstantAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_year_1_0=RULE_INT
					{
						newLeafNode(lv_year_1_0, grammarAccess.getTimeConstantAccess().getYearINTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeConstantRule());
						}
						setWithLastConsumed(
							$current,
							"year",
							lv_year_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_2='year'
			{
				newLeafNode(otherlv_2, grammarAccess.getTimeConstantAccess().getYearKeyword_1_1());
			}
		)?
		(
			(
				(
					lv_month_3_0=RULE_INT
					{
						newLeafNode(lv_month_3_0, grammarAccess.getTimeConstantAccess().getMonthINTTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeConstantRule());
						}
						setWithLastConsumed(
							$current,
							"month",
							lv_month_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_4='month'
			{
				newLeafNode(otherlv_4, grammarAccess.getTimeConstantAccess().getMonthKeyword_2_1());
			}
		)?
		(
			(
				(
					lv_day_5_0=RULE_INT
					{
						newLeafNode(lv_day_5_0, grammarAccess.getTimeConstantAccess().getDayINTTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeConstantRule());
						}
						setWithLastConsumed(
							$current,
							"day",
							lv_day_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_6='day'
			{
				newLeafNode(otherlv_6, grammarAccess.getTimeConstantAccess().getDayKeyword_3_1());
			}
		)?
		(
			(
				(
					lv_hour_7_0=RULE_INT
					{
						newLeafNode(lv_hour_7_0, grammarAccess.getTimeConstantAccess().getHourINTTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeConstantRule());
						}
						setWithLastConsumed(
							$current,
							"hour",
							lv_hour_7_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_8='hour'
			{
				newLeafNode(otherlv_8, grammarAccess.getTimeConstantAccess().getHourKeyword_4_1());
			}
		)?
		(
			(
				(
					lv_min_9_0=RULE_INT
					{
						newLeafNode(lv_min_9_0, grammarAccess.getTimeConstantAccess().getMinINTTerminalRuleCall_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeConstantRule());
						}
						setWithLastConsumed(
							$current,
							"min",
							lv_min_9_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_10='min'
			{
				newLeafNode(otherlv_10, grammarAccess.getTimeConstantAccess().getMinKeyword_5_1());
			}
		)?
		(
			(
				(
					lv_sec_11_0=RULE_INT
					{
						newLeafNode(lv_sec_11_0, grammarAccess.getTimeConstantAccess().getSecINTTerminalRuleCall_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeConstantRule());
						}
						setWithLastConsumed(
							$current,
							"sec",
							lv_sec_11_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_12='sec'
			{
				newLeafNode(otherlv_12, grammarAccess.getTimeConstantAccess().getSecKeyword_6_1());
			}
		)?
		(
			(
				(
					lv_date_13_0=RULE_INT
					{
						newLeafNode(lv_date_13_0, grammarAccess.getTimeConstantAccess().getDateINTTerminalRuleCall_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeConstantRule());
						}
						setWithLastConsumed(
							$current,
							"date",
							lv_date_13_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_14='th'
			{
				newLeafNode(otherlv_14, grammarAccess.getTimeConstantAccess().getThKeyword_7_1());
			}
		)?
	)
;

// Entry rule entryRuleTimeVarExpression
entryRuleTimeVarExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeVarExpressionRule()); }
	iv_ruleTimeVarExpression=ruleTimeVarExpression
	{ $current=$iv_ruleTimeVarExpression.current; }
	EOF;

// Rule TimeVarExpression
ruleTimeVarExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeVarExpressionAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeVarExpressionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getTimeVarExpressionAccess().getSlotDataSlotCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2='::'
			{
				newLeafNode(otherlv_2, grammarAccess.getTimeVarExpressionAccess().getColonColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTimeVarExpressionAccess().getNextSlotRefParserRuleCall_2_1_0());
					}
					lv_next_3_0=ruleSlotRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimeVarExpressionRule());
						}
						set(
							$current,
							"next",
							lv_next_3_0,
							"edu.ustb.sei.mde.SmartContractSpecification.SlotRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTimeThisExpression
entryRuleTimeThisExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeThisExpressionRule()); }
	iv_ruleTimeThisExpression=ruleTimeThisExpression
	{ $current=$iv_ruleTimeThisExpression.current; }
	EOF;

// Rule TimeThisExpression
ruleTimeThisExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTimeThisExpressionAccess().getThisExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='@'
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeThisExpressionAccess().getCommercialAtKeyword_1());
		}
		(
			(
				otherlv_2='this'
				{
					newLeafNode(otherlv_2, grammarAccess.getTimeThisExpressionAccess().getThisKeyword_2_0_0());
				}
				this_ID_3=RULE_ID
				{
					newLeafNode(this_ID_3, grammarAccess.getTimeThisExpressionAccess().getIDTerminalRuleCall_2_0_1());
				}
			)
			    |
			otherlv_4='he'
			{
				newLeafNode(otherlv_4, grammarAccess.getTimeThisExpressionAccess().getHeKeyword_2_1());
			}
			    |
			otherlv_5='she'
			{
				newLeafNode(otherlv_5, grammarAccess.getTimeThisExpressionAccess().getSheKeyword_2_2());
			}
			    |
			otherlv_6='his'
			{
				newLeafNode(otherlv_6, grammarAccess.getTimeThisExpressionAccess().getHisKeyword_2_3());
			}
			    |
			otherlv_7='her'
			{
				newLeafNode(otherlv_7, grammarAccess.getTimeThisExpressionAccess().getHerKeyword_2_4());
			}
			    |
			otherlv_8='himself'
			{
				newLeafNode(otherlv_8, grammarAccess.getTimeThisExpressionAccess().getHimselfKeyword_2_5());
			}
			    |
			otherlv_9='herself'
			{
				newLeafNode(otherlv_9, grammarAccess.getTimeThisExpressionAccess().getHerselfKeyword_2_6());
			}
		)
		(
			otherlv_10='::'
			{
				newLeafNode(otherlv_10, grammarAccess.getTimeThisExpressionAccess().getColonColonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTimeThisExpressionAccess().getTransitiveTransitiveOperatorEnumRuleCall_3_1_0());
					}
					lv_transitive_11_0=ruleTransitiveOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimeThisExpressionRule());
						}
						set(
							$current,
							"transitive",
							lv_transitive_11_0,
							"edu.ustb.sei.mde.SmartContractSpecification.TransitiveOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getTimeThisExpressionAccess().getNextSlotRefParserRuleCall_3_2_0());
					}
					lv_next_12_0=ruleSlotRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTimeThisExpressionRule());
						}
						set(
							$current,
							"next",
							lv_next_12_0,
							"edu.ustb.sei.mde.SmartContractSpecification.SlotRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Rule Quantifier
ruleQuantifier returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='all'
			{
				$current = grammarAccess.getQuantifierAccess().getForAllEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getQuantifierAccess().getForAllEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='forAll'
			{
				$current = grammarAccess.getQuantifierAccess().getForAllEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getQuantifierAccess().getForAllEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='some'
			{
				$current = grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='exists'
			{
				$current = grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule RelationOperator
ruleRelationOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getRelationOperatorAccess().getEqualEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRelationOperatorAccess().getEqualEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='is'
			{
				$current = grammarAccess.getRelationOperatorAccess().getEqualEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRelationOperatorAccess().getEqualEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='<'
			{
				$current = grammarAccess.getRelationOperatorAccess().getLessEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRelationOperatorAccess().getLessEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='<='
			{
				$current = grammarAccess.getRelationOperatorAccess().getLessOrEqualEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRelationOperatorAccess().getLessOrEqualEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>'
			{
				$current = grammarAccess.getRelationOperatorAccess().getGreaterEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRelationOperatorAccess().getGreaterEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='>='
			{
				$current = grammarAccess.getRelationOperatorAccess().getGreaterOrEqualEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getRelationOperatorAccess().getGreaterOrEqualEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='!='
			{
				$current = grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='<>'
			{
				$current = grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='isn\'t'
			{
				$current = grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getRelationOperatorAccess().getNotEqualEnumLiteralDeclaration_8());
			}
		)
	)
;

// Rule AdditiveOperator
ruleAdditiveOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='+'
			{
				$current = grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule MultiplicativeOperator
ruleMultiplicativeOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='*'
			{
				$current = grammarAccess.getMultiplicativeOperatorAccess().getMulEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMultiplicativeOperatorAccess().getMulEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='/'
			{
				$current = grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TransitiveOperator
ruleTransitiveOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='^'
			{
				$current = grammarAccess.getTransitiveOperatorAccess().getTransitiveEnclosureEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTransitiveOperatorAccess().getTransitiveEnclosureEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='*'
			{
				$current = grammarAccess.getTransitiveOperatorAccess().getSelfTransitiveEnclosureEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTransitiveOperatorAccess().getSelfTransitiveEnclosureEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TimePredicateOperator
ruleTimePredicateOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='before'
			{
				$current = grammarAccess.getTimePredicateOperatorAccess().getBeforeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTimePredicateOperatorAccess().getBeforeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='after'
			{
				$current = grammarAccess.getTimePredicateOperatorAccess().getAfterEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTimePredicateOperatorAccess().getAfterEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ActionMultiplicity
ruleActionMultiplicity returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='all'
			{
				$current = grammarAccess.getActionMultiplicityAccess().getAllEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getActionMultiplicityAccess().getAllEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='any'
			{
				$current = grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='some'
			{
				$current = grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='one'
			{
				$current = grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getActionMultiplicityAccess().getAnyEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='this'
			{
				$current = grammarAccess.getActionMultiplicityAccess().getThisEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getActionMultiplicityAccess().getThisEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='the'
			{
				$current = grammarAccess.getActionMultiplicityAccess().getThisEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getActionMultiplicityAccess().getThisEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule TimeLineOperator
ruleTimeLineOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='+'
			{
				$current = grammarAccess.getTimeLineOperatorAccess().getForwardEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTimeLineOperatorAccess().getForwardEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getTimeLineOperatorAccess().getBackwardEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTimeLineOperatorAccess().getBackwardEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TimeQueryOperator
ruleTimeQueryOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='now'
			{
				$current = grammarAccess.getTimeQueryOperatorAccess().getNowEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTimeQueryOperatorAccess().getNowEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='start'
			{
				$current = grammarAccess.getTimeQueryOperatorAccess().getContractStartEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTimeQueryOperatorAccess().getContractStartEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='end'
			{
				$current = grammarAccess.getTimeQueryOperatorAccess().getContractEndEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTimeQueryOperatorAccess().getContractEndEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_SLD : 'i.e.,' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SL_COMMENT : ('@@'|'//') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_PLAINTEXT : '#' ('\\' .|~(('\\'|'#')))* '#';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
